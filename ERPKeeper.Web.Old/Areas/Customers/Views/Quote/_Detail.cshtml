@model ERPKeeper.Node.Models.Estimations.SaleQuote

@using (Html.BeginForm("Save", "Quote", new { }, FormMethod.Post, new { @id = "SaveForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Uid)
    @Html.HiddenFor(model => model.Total)
    @Html.HiddenFor(model => model.LinesTotal)
    @Html.HiddenFor(model => model.ProfileGuid)

    <div class="row bg-fb2 mb-3">
        <div class="col-6 p-0">
            @Html.DevExpress().FormLayout(settings =>
       {
           settings.Name = "Item";
           settings.Width = Unit.Percentage(100);
           settings.EncodeHtml = false;


           settings.Items.AddGroupItem(groupSettings =>
           {
               groupSettings.Caption = "Home";
               groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
               groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

               groupSettings.Items.Add(m => m.TrnDate, itemSettings =>
               {
                   itemSettings.Caption = "Trn Date";
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                   DateEditSettings s = (DateEditSettings)itemSettings.NestedExtensionSettings;
                   s.Properties.DisplayFormatString = "dd MMMM yyyy";

               });
               groupSettings.Items.Add(m => m.ExpiredInDayCount, itemSettings =>
               {
                   itemSettings.Caption = "Expire In";
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.SpinEdit;

               });

               groupSettings.Items.Add(m => m.Reference, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;



                   TextBoxSettings tb = (TextBoxSettings)itemSettings.NestedExtensionSettings;
                   tb.Properties.MaxLength = 30;
               });



           });


           settings.Items.AddGroupItem(groupSettings =>
           {
               groupSettings.Caption = "Project";
               groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
               groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;


               groupSettings.Items.Add(m => m.ProjectGuid, itemSettings =>
               {

                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.Caption = itemSettings.Caption = Html.ActionLink("Project", "Home", "Projects", new { Area = "Projects" }, null).ToHtmlString();
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                   ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                   cb.Properties.TextField = "Name";
                   cb.Properties.ValueField = "Uid";
                   cb.Properties.ValueType = typeof(Guid);

                   cb.Properties.DataSource = erpNodeDBContext.Projects.Where(p => p.CustomerProfileGuid == Model.ProfileGuid).ToList();
                   cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
               });

           });


           if (Model.ProfileGuid != null)
           {
               settings.Items.AddGroupItem(groupSettings =>
               {
                   groupSettings.Caption = "Profile"; ;
                   groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
                   groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

                   groupSettings.Items.Add(m => m.ProfileGuid, itemSettings =>
                   {
                       itemSettings.ShowCaption = DefaultBoolean.False;
                       itemSettings.SetNestedContent(Html.Partial("_ProfileDetail", Model).ToString());
                   });
               });
           }





       }).GetHtml()
        </div>

        <div class="col-6 p-0">
            @Html.DevExpress().FormLayout(settings =>
       {
           settings.Name = "Item2";
           settings.Width = Unit.Percentage(100);
           settings.ColCount = 1;
           settings.EncodeHtml = false;

           settings.Items.AddGroupItem(groupSettings =>
           {

               groupSettings.Caption = "Other Detail"; ;
               groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
               groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

               groupSettings.Items.Add(m => m.PaymentTermGuid, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.Caption = itemSettings.Caption = Html.ActionLink("Payment Term", "", "PaymentTerms", new { Area = "Setting" }, null).ToHtmlString();
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                   ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                   cb.Properties.TextField = "Name";
                   cb.Properties.ValueField = "Uid";
                   cb.Properties.ValueType = typeof(Guid);
                   cb.Properties.DataSource = erpNodeDBContext.PaymentTerms.ToList();
                   cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
               });

               groupSettings.Items.Add(m => m.Memo, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;
                   itemSettings.CaptionSettings.Location = LayoutItemCaptionLocation.Top;
                   MemoSettings cb = (MemoSettings)itemSettings.NestedExtensionSettings;
                   cb.Width = Unit.Percentage(100);
                   cb.Height = Unit.Pixel(100);
               });

               groupSettings.Items.Add(m => m.ShippingTermGuid, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.Caption = Html.ActionLink("Shipping Term", "", "ShippingTerms", new { Area = "Setting" }, null).ToHtmlString();
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                   ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                   cb.Properties.TextField = "Name";
                   cb.Properties.ValueField = "Uid";
                   cb.Properties.ValueType = typeof(Guid);
                   cb.Properties.DataSource = erpNodeDBContext.ShippingTerms.ToList();
                   cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
               });


               groupSettings.Items.Add(m => m.ShippingMethodGuid, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.Caption = Html.ActionLink("Shipping Method", "", "ShippingMethods", new { Area = "Setting" }, null).ToHtmlString();

                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                   ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                   cb.Properties.TextField = "Name";
                   cb.Properties.ValueField = "Uid";
                   cb.Properties.ValueType = typeof(Guid);
                   cb.Properties.DataSource = erpNodeDBContext.ShippingMethods.ToList();
                   cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
               });


           });

           if (erpNodeDBContext.TaxCodes.Count() > 0)
           {
               settings.Items.AddGroupItem(groupSettings =>
               {
                   groupSettings.Caption = "Tax"; ;
                   groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
                   groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

                   groupSettings.Items.Add(m => m.TaxCodeGuid, itemSettings =>
                   {
                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.Caption = Html.ActionLink("Tax Group", "", "TaxCodes", new { Area = "Setting" }, null).ToHtmlString();
                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                       ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                       cb.Properties.TextField = "Name";
                       cb.Properties.ValueField = "Uid";
                       cb.Properties.ValueType = typeof(Guid);
                       cb.Properties.DataSource = Organization.TaxCodes.ListAll();
                       cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   });
               });
           }

           settings.Items.Add(item =>
           {
               item.NestedExtensionType = FormLayoutNestedExtensionItemType.Button;
               item.ShowCaption = DefaultBoolean.False;
               item.HorizontalAlign = FormLayoutHorizontalAlign.Right;
               var button = (ButtonSettings)item.NestedExtensionSettings;
               button.Name = "SaveButton";
               button.Text = "Save";
               button.UseSubmitBehavior = true;

           });
       }).GetHtml()
        </div>
    </div>
}
