
@model IList<ERPKeeper.Node.Models.Taxes.IncomeTax>

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "IncomeTaxes", Action = "PartialGridView" };

        settings.KeyFieldName = "Uid";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.Styles.Header.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        

        settings.Columns.Add(column =>
        {
            column.FieldName = "No";
            column.Caption = "=>";
            column.SortIndex = 1;

            column.SetDataItemTemplateContent(t =>
            {
                string No = (DataBinder.Eval(t.DataItem, "No") ?? "NA").ToString();
                string Uid = ((Guid)DataBinder.Eval(t.DataItem, "Uid")).ToString("N");
                ViewContext.Writer.Write(Html.ActionLink(No, "Home", "IncomeTax", new { id = Uid }, null));
            });
        });



        settings.Columns.Add(column =>
        {
            column.FieldName = "FiscalYear";
            column.Caption = "Period";

            column.SetDataItemTemplateContent(t =>
            {
                string No = (DataBinder.Eval(t.DataItem, "FiscalYear.Name") ?? "NA").ToString();
                string Uid = ((Guid)DataBinder.Eval(t.DataItem, "Uid")).ToString("N");
                ViewContext.Writer.Write(Html.ActionLink(No, "Home", "IncomeTax", new { id = Uid }, null));
            });
        });




        settings.Columns.Add(column =>
        {
            column.FieldName = "TrDate";
            column.Caption = "Trn Date";
            column.SortIndex = 1;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = "dd-MMM-yy";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "ProfitAmount";
            column.Caption = "Profit";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "TaxAmount";
            column.Caption = "Tax";
        });


        settings.Columns.Add(column =>
{
              column.FieldName = "IncomeTaxExpenAccount.Name";
              column.Caption = "Account";
          });

//settings.Columns.Add(column =>
//{
//    column.FieldName = "InputTaxBalance";
//    column.Caption = "Input";
//    column.PropertiesEdit.DisplayFormatString = "#,##0.00;(#,##0.00);-";
//});

//settings.Columns.Add(column =>
//{
//    column.FieldName = "OutputTaxBalance";
//    column.Caption = "Output";
//    column.PropertiesEdit.DisplayFormatString = "#,##0.00;(#,##0.00);-";
//});


//settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "InputTaxBalance").DisplayFormat = "N2";
//settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "OutputTaxBalance").DisplayFormat = "N2";



settings.Columns.Add(column =>
        {
            column.FieldName = "PostStatus";;
            column.Caption = " ";
            column.SetDataItemTemplateContent(t =>
            {
                ViewContext.Writer.Write(ERPKeeper.Node.Helpers.Status.LedgerStatus(DataBinder.Eval(t.DataItem, "PostStatus")));
            });
        });






        settings.EnableTheming = true;
        settings.Styles.Header.Font.Bold = true;
        settings.Width = Unit.Percentage(100);
        settings.Settings.ShowFooter = true;



    });
}
@grid.Bind(Model).GetHtml()