
@model IList<ERPKeeper.Node.Models.Financial.Transfer.FundTransfer>


@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewABC";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.CallbackRouteValues = new { Controller = "FundTransfers", Action = "PartialGridView" };
        settings.KeyFieldName = "Uid";

        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 400;
        settings.SettingsPopup.HeaderFilter.SettingsAdaptivity.MinHeight = 300;


        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleIfExpanded;
        settings.SettingsBehavior.AutoExpandAllGroups = true;

        settings.BeforeGetCallbackResult = (sender, e) =>
        {

            if (ViewBag.GroupedColumns == null)
            {
                return;
            }


            MVCxGridView gridNew = (MVCxGridView)sender;
            string[] columnNames = ViewBag.GroupedColumns.Split(';');
            gridNew.ClearSort();

            foreach (string name in columnNames)
            {
                gridNew.GroupBy(gridNew.Columns[name]);
            }
            gridNew.ExpandAll();
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "No";
            column.Caption = "No";

            column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
          
            column.SortIndex = 2;
            column.SetDataItemTemplateContent(t =>
            {
                string id = ((Guid)DataBinder.Eval(t.DataItem, "Uid")).ToString("N");
                string Number = (DataBinder.Eval(t.DataItem, "Name")).ToString();
                ViewContext.Writer.Write(Html.ActionLink(Number, "Home", "FundTransfer", new { id = id }, null));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TrnDate";
            column.Caption = Lang.TrnDate;
            column.Width = 100;
            column.SortIndex = 1;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = "dd-MMM-yy";
        });


       

        settings.Columns.Add(column =>
        {
            column.FieldName = "WithDrawAccount.Name";
            column.Caption = "From";

            column.SetDataItemTemplateContent(t =>
            {
                string accountUid = (DataBinder.Eval(t.DataItem, "WithDrawAccountGuid") ?? "N/A").ToString();
                string Name = (DataBinder.Eval(t.DataItem, "WithDrawAccount.Name") ?? "N/A").ToString();
                string SpanBadge = (DataBinder.Eval(t.DataItem, "WithDrawAccount.SpanBadge") ?? "N/A").ToString();
                ViewContext.Writer.Write(SpanBadge + " " + Html.ActionLink(Name, "Home", "AccountItem", new { id = accountUid, Area = "Accounting" }, null));
            });
        });

       


        settings.Columns.Add(column =>
        {
            column.FieldName = "DepositAccount.Name";
            column.Caption = "DEPOSIT Account";

            column.SetDataItemTemplateContent(t =>
            {
                string accountUid = (DataBinder.Eval(t.DataItem, "DepositAccountGuid") ?? "N/A").ToString();
                string Name = (DataBinder.Eval(t.DataItem, "DepositAccount.Name") ?? "N/A").ToString();

                string SpanBadge = (DataBinder.Eval(t.DataItem, "DepositAccount.SpanBadge") ?? "N/A").ToString();
                ViewContext.Writer.Write(SpanBadge + " " + Html.ActionLink(Name, "Home", "AccountItem", new { id = accountUid, Area = "Accounting" }, null));
            });

        });

         settings.Columns.Add(column =>
        {
            column.FieldName = "AmountwithDraw";
            column.Caption = "WithDraw";
            column.PropertiesEdit.DisplayFormatString = "N2";
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "AmountFee";
            column.Caption = "Fee";
            column.Width = 60;
            column.PropertiesEdit.DisplayFormatString = "#,##0.00;(#,##0.00);-";
        });
           settings.Columns.Add(column =>
        {
            column.FieldName = "Reference";
            column.Caption = "Reference";
      
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "PostStatus";;
            column.Caption = " ";
            column.SetDataItemTemplateContent(t =>
            {
                ViewContext.Writer.Write(ERPKeeper.Node.Helpers.Status.LedgerStatus(DataBinder.Eval(t.DataItem, "PostStatus")));
            });
        });



        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "AmountDeposit").DisplayFormat = "N2";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "AmountFee").DisplayFormat = "N2";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "AmountwithDraw").DisplayFormat = "N2";
        settings.Settings.ShowFooter = true;
        settings.EnableTheming = true;
        settings.Styles.Header.Font.Bold = true;
        settings.Width = Unit.Percentage(100);
        settings.Styles.Header.BackColor = System.Drawing.Color.Transparent;
        settings.Styles.GroupRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#CCCCCC");
        settings.Styles.GroupRow.Font.Bold = true;
        settings.Styles.GroupFooter.Font.Bold = true;
        settings.Styles.Footer.Font.Bold = true;



    });
}
@grid.Bind(Model).GetHtml()

