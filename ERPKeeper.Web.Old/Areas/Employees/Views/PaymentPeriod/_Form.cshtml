
@model ERPKeeper.Node.Models.Employees.EmployeePaymentPeriod

<div class="bg-fb2 mb-2 p-0 rounded">

@using (Html.BeginForm("Save", "PaymentPeriod"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Uid)
    @Html.DevExpress().FormLayout(settings =>{
    settings.Name = "Activity";
    settings.Width = Unit.Percentage(100);
    settings.ColumnCount = 2;
    settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Period";
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
        groupSettings.Items.Add(m => m.Name, itemSettings =>{
            itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        });

        groupSettings.Items.Add(m => m.TrnDate, itemSettings =>{
            itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        });
    });

    settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Payment";
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;

        groupSettings.Items.Add(m => m.PayFromAccountGuid, itemSettings =>
        {
            itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
            itemSettings.Caption = "WidthDraw Account";
            itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

            ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
            cb.Properties.TextField = "Name";
            cb.Properties.ValueField = "Uid";
            cb.Properties.ValueType = typeof(Guid);
            cb.Properties.DataSource = Organization.ChartOfAccount.GetCashEquivalentAccounts();
        });

        groupSettings.Items.Add(m => m.TotalPayment, itemSettings =>
        {
            itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
            SpinEditSettings cb = (SpinEditSettings)itemSettings.NestedExtensionSettings;
            cb.Enabled = false;
        });
    });


    settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Action";
        groupSettings.ColumnSpan = 2;
        groupSettings.Items.Add(item =>
        {
            item.NestedExtensionType = FormLayoutNestedExtensionItemType.Button;
            item.ShowCaption = DefaultBoolean.False;
            item.HorizontalAlign = FormLayoutHorizontalAlign.Right;
            var button = (ButtonSettings)item.NestedExtensionSettings;
            button.Name = "SaveButton";
            button.Text = "Save";
            button.UseSubmitBehavior = true;
        });
    });

}).GetHtml()

}

    </div>