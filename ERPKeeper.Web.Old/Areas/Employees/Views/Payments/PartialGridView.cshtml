
@model IList<ERPKeeper.Node.Models.Employees.EmployeePayment>
@{

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPayments";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.CallbackRouteValues = new
        {
            Area = "Employees",
            Controller = "Payments",
            Action = "PartialGridView"
        };


        settings.Styles.Header.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.EncodeHtml = false;

        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleIfExpanded;
        settings.SettingsBehavior.AutoExpandAllGroups = true;
        settings.EncodeHtml = false;
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Amount").DisplayFormat = "N2";

        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 300;
        settings.SettingsPopup.HeaderFilter.Width = 300;
        settings.SettingsPopup.HeaderFilter.SettingsAdaptivity.MinHeight = 300;
        settings.SettingsPopup.HeaderFilter.SettingsAdaptivity.MinWidth = 300;


        settings.Columns.Add(column =>
        {
            column.FieldName = "EmployeePaymentPeriod.TrnDate";
            column.Caption = Lang.TrnDate;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = "dd-MMM-yy";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "EmployeePaymentPeriod.TrGroup";
            column.Caption = "Period";
            column.GroupIndex = 0;
            column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "No";
            column.SortIndex = 1;
            column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
            column.SetDataItemTemplateContent(t =>
            {
                string Uid = ((Guid)DataBinder.Eval(t.DataItem, "Uid")).ToString("N");
                string Name = (DataBinder.Eval(t.DataItem, "Name") ?? "NA").ToString();
                ViewContext.Writer.Write(Html.ActionLink(Name, "Home", "Payment", new { id = Uid }, null));
            });
        });




        settings.Columns.Add(column =>
        {
            column.FieldName = "Employee.Profile.Name";
            column.Visible = false;
        });



        settings.Columns.Add(column =>
        {
            column.FieldName = "Employee.Profile.Uid";
            column.Caption = "Employee";
            column.ColumnType = MVCxGridViewColumnType.HyperLink;
            ((HyperLinkProperties)column.PropertiesEdit).TextField = "Employee.Profile.Name";
            ((HyperLinkProperties)column.PropertiesEdit).NavigateUrlFormatString = Url.Action("Home", "Employee", new { Area = "Employees" }) + "/{0}";
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "TotalEarning";
            column.Caption = "Earning";
            column.PropertiesEdit.DisplayFormatString = "N2";

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TotalDeduction";
            column.Caption = "Deduction";
            column.PropertiesEdit.DisplayFormatString = "N2";

        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "TotalPayment";
            column.Caption = "Payment";
            column.PropertiesEdit.DisplayFormatString = "N2";
        });



        //settings.Columns.Add(column =>
        //{
        //    column.FieldName = "PayFromAccount.Name";
        //    column.Caption = "PayFrom";

        //    column.SetDataItemTemplateContent(t =>
        //    {
        //        string accountUid = (DataBinder.Eval(t.DataItem, "PayFromAccount.Uid") ?? Guid.Empty).ToString();
        //        string Name = (DataBinder.Eval(t.DataItem, "PayFromAccount.Name") ?? "N/A").ToString();
        //        ViewContext.Writer.Write(Html.ActionLink(Name, "Home", "AccountItem", new { id = accountUid, Area = "Accounting" }, null));
        //    });
        //});




        settings.Columns.Add(column =>
        {
            column.FieldName = "PostStatus"; ;
            column.Caption = " ";
            column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Middle;
            column.SetDataItemTemplateContent(t =>
            {
                ViewContext.Writer.Write(ERPKeeper.Node.Helpers.Status.LedgerStatus(DataBinder.Eval(t.DataItem, "PostStatus")));
            });
        });



        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalEarning").DisplayFormat = "N2";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalDeduction").DisplayFormat = "N2";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalPayment").DisplayFormat = "N2";

        var GroupTotalEarning = settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalEarning");
        GroupTotalEarning.ShowInGroupFooterColumn = "TotalEarning";
        GroupTotalEarning.DisplayFormat = "N2";


        var GroupTotalDeduction = settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalDeduction");
        GroupTotalDeduction.ShowInGroupFooterColumn = "TotalDeduction";
        GroupTotalDeduction.DisplayFormat = "N2";


        var GroupTotalPayment = settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalPayment");
        GroupTotalPayment.ShowInGroupFooterColumn = "TotalPayment";
        GroupTotalPayment.DisplayFormat = "N2";

        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Count, "No");

        settings.Settings.ShowFooter = true;




        settings.Width = Unit.Percentage(100);

        settings.EnableTheming = true;

        settings.Styles.Header.Font.Bold = true;



















        settings.CommandColumn.CellStyle.BackColor = System.Drawing.Color.Transparent;
        settings.CommandColumn.CellStyle.VerticalAlign = VerticalAlign.Top;
        settings.CommandColumn.CellStyle.BorderBottom.BorderColor = System.Drawing.Color.White;
        settings.CommandColumn.CellStyle.BorderBottom.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        settings.CommandColumn.CellStyle.BorderBottom.BorderWidth = 3;

        settings.CommandColumn.CellStyle.BorderRight.BorderColor = System.Drawing.Color.White;
        settings.CommandColumn.CellStyle.BorderRight.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        settings.CommandColumn.CellStyle.BorderRight.BorderWidth = 3;
    });
}
@grid.Bind(Model).GetHtml()

