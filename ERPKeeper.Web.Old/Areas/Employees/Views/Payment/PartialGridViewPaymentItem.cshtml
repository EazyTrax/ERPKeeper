
@model ERPKeeper.Node.Models.Employees.EmployeePayment

@{

    Layout = null;
}

@{

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridEMPPaymentItems";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.CallbackRouteValues = new { Controller = "Payment", Action = "PartialGridViewPaymentItem", id = Model.Uid };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Payment", Action = "PartialGridViewPaymentItemUpdate", id = Model.Uid };
        settings.KeyFieldName = "Uid";
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;


        settings.CommandColumn.ButtonRenderMode = GridCommandButtonRenderMode.Button;
        settings.SettingsCommandButton.CancelButton.RenderMode = GridCommandButtonRenderMode.Button;
        settings.SettingsCommandButton.UpdateButton.RenderMode = GridCommandButtonRenderMode.Button;

        settings.PreRender = (s, e) =>
        {
            MVCxGridView GridEMPPaymentItems = s as MVCxGridView;
            if (GridEMPPaymentItems != null)
                GridEMPPaymentItems.ExpandAll();
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "PaymentType.PayDirection";
            column.Caption = "PayDirection";
            column.GroupIndex = 0;
            column.SortIndex = 1;
            column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;

            column.SetDataItemTemplateContent(t =>
            {
                string PaymentTypeGuid = DataBinder.Eval(t.DataItem, "PaymentType.Uid").ToString();
                string Name = DataBinder.Eval(t.DataItem, "PaymentType.PayDirection").ToString();
                ViewContext.Writer.Write(Html.ActionLink(Name, "Home", "PaymentType", new { id = PaymentTypeGuid }, null));
            });

        });



        settings.Columns.Add(column =>
        {
            column.FieldName = "PaymentType.Name";
            column.Caption = "Name";

            column.SetDataItemTemplateContent(t =>
            {
                string PaymentTypeGuid = DataBinder.Eval(t.DataItem, "PaymentType.Uid").ToString();
                string Name = DataBinder.Eval(t.DataItem, "PaymentType.Name").ToString();
                ViewContext.Writer.Write(Html.ActionLink(Name, "Home", "PaymentType", new { id = PaymentTypeGuid }, null));
            });
        });








        settings.Columns.Add(column =>
        {
            column.FieldName = "Amount";
            column.Caption = "Amount";
            column.Visible = false;
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "EarningAmount";
            column.Caption = "Earning";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "DeductionAmount";
            column.Caption = "Deduction";
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "Memo";
            column.Caption = "Memo";
        });





        //settings.Columns.Add(column =>
        //{
        //    column.FieldName = "TotalAmount";
        //    column.Caption = "Total";
        //});


        settings.EditFormLayoutProperties.ColCount = 1;
        // settings.EditFormLayoutProperties.Items.Add("PaymentTypeGuid");
        settings.EditFormLayoutProperties.Items.Add("Amount");
        settings.EditFormLayoutProperties.Items.Add("Memo");
        settings.EditFormLayoutProperties.Items.AddCommandItem(i =>
        {
            i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });


        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "EarningAmount").DisplayFormat = "N2";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "DeductionAmount").DisplayFormat = "N2";

        settings.Settings.ShowFooter = true;




        settings.Width = Unit.Percentage(100);

        settings.EnableTheming = true;

        settings.Styles.Header.Font.Bold = true;



















        settings.CommandColumn.CellStyle.BackColor = System.Drawing.Color.Transparent;
        settings.CommandColumn.CellStyle.VerticalAlign = VerticalAlign.Top;
        settings.CommandColumn.CellStyle.BorderBottom.BorderColor = System.Drawing.Color.White;
        settings.CommandColumn.CellStyle.BorderBottom.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        settings.CommandColumn.CellStyle.BorderBottom.BorderWidth = 3;

        settings.CommandColumn.CellStyle.BorderRight.BorderColor = System.Drawing.Color.White;
        settings.CommandColumn.CellStyle.BorderRight.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        settings.CommandColumn.CellStyle.BorderRight.BorderWidth = 3;

        settings.ClientSideEvents.RowDblClick = "OnRowDblClick";
    });
}
@grid.Bind(Model.PaymentItems).GetHtml()

