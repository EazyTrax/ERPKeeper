
@model ERPKeeper.Node.Models.Accounting.FiscalYear

<div class="bg-fb2">
  @using (Html.BeginForm("Save", "FiscalYear", new { Area = "Accounting" }, FormMethod.Post, new { @id = "SaveForm" }))
  {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Uid)


    @Html.DevExpress().FormLayout(settings =>
  {
    settings.Name = "PeriodDetailForm";

    settings.ColCount = 1;
    settings.Width = Unit.Pixel(400);
    settings.EncodeHtml = false;

    if (Model.Status == ERPKeeper.Node.Models.Accounting.EnumFiscalYearStatus.Close)
      settings.Enabled = false;



    settings.Items.AddGroupItem(groupSettings =>
    {
      groupSettings.Caption = "Period Date";
      groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;

      groupSettings.Items.Add(m => m.StartDate, itemSettings =>
      {
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";

      });

      groupSettings.Items.Add(m => m.EndDate, itemSettings =>
      {
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";

      });
    });

    settings.Items.AddGroupItem(groupSettings =>
    {
      groupSettings.Caption = "Closing Detail";
      groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;


      groupSettings.Items.Add(m => m.IncomeBalance, itemSettings =>
      {
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        itemSettings.Caption = Lang.Income;

        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;

        TextBoxSettings textBox = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        textBox.ReadOnly = true;
        textBox.Properties.DisplayFormatString = "N2";

      });

      groupSettings.Items.Add(m => m.ExpenseBalance, itemSettings =>
      {
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        itemSettings.Caption = Lang.Expense;

        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;

        TextBoxSettings textBox = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        textBox.ReadOnly = true;
        textBox.Properties.DisplayFormatString = "N2";
      });

      groupSettings.Items.Add(m => m.ProfitBalance, itemSettings =>
      {
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        itemSettings.Caption = Lang.Profit;

        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;

        TextBoxSettings textBox = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        textBox.ReadOnly = true;
        textBox.Properties.DisplayFormatString = "N2";
      });


    });

    settings.Items.AddGroupItem(groupSettings =>
    {
      groupSettings.Caption = "Closing ";
      groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;

      groupSettings.Items.Add(m => m.ClosingAccountGuid, itemSettings =>
      {
        itemSettings.Caption = "Closing Account";
        itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;


        ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

        cb.Properties.TextField = "Name";
        cb.Properties.ValueField = "Uid";
        cb.Properties.ValueType = typeof(Guid);
        cb.Properties.DataSource = Organization.ChartOfAccount.EquityAccounts;
      });
    });

    if (Model.Status == ERPKeeper.Node.Models.Accounting.EnumFiscalYearStatus.Open)
    {
      settings.Items.Add(item =>
      {
        item.NestedExtensionType = FormLayoutNestedExtensionItemType.Button;
        item.ShowCaption = DefaultBoolean.False;
        item.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        var button = (ButtonSettings)item.NestedExtensionSettings;
        button.Name = "SaveButton";
        button.Text = "Save";
        button.UseSubmitBehavior = true;
      });
    }



  }).GetHtml()

  }
</div>