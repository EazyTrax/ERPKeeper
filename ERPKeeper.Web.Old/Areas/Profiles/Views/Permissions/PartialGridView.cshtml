@model IList<ERPKeeper.Node.Models.Profiles.Profile>


@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.Width = Unit.Percentage(100);
        //settings.SettingsSearchPanel.Visible = true;
        settings.Styles.Header.Font.Bold = true;
        settings.EncodeHtml = false;
        settings.CallbackRouteValues = new { Controller = "Permissions", Action = "PartialGridView", id = ViewBag.id };
        settings.KeyFieldName = "Uid";

        settings.BeforeGetCallbackResult = (sender, e) =>
        {
            if (ViewBag.GroupedColumns == null)
                return;

            MVCxGridView gridNew = (MVCxGridView)sender;
            string[] columnNames = ViewBag.GroupedColumns.Split(';');
            gridNew.ClearSort();

            foreach (string name in columnNames)
            {
                gridNew.GroupBy(gridNew.Columns[name]);
            }
            gridNew.ExpandAll();
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "Uid";
            column.Caption = " ";

            column.SetDataItemTemplateContent(t =>
            {

                string StatusImage = "<img src ='/Content/Icon/Active.png' />";
                ViewContext.Writer.Write(string.Format("{0}", StatusImage));
            });
            column.CellStyle.VerticalAlign = VerticalAlign.Top;

        });

     
        settings.Columns.Add(column =>
        {
            column.FieldName = "AccessLevel";
            column.Caption = "Permission";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Name";
            column.Caption = "Name";
            column.SortIndex = 1;
            column.SortAscending();
            column.CellStyle.VerticalAlign = VerticalAlign.Top;

            column.SetDataItemTemplateContent(t =>
            {
                string ProfileGuid = ((Guid)DataBinder.Eval(t.DataItem, "Uid")).ToString("N");
                string Name = (DataBinder.Eval(t.DataItem, "Name") ?? "N/A").ToString();
                var linkTag = Html.ActionLink(Name, "Home", "Profile", new { Area = "Profiles", id = ProfileGuid }, null);
                ViewContext.Writer.Write(string.Format("<div style='text-overflow:ellipsis;overflow:hidden; white-space:nowrap ; width:350px;'>{0}</div>", linkTag));

            });



        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TaxNumber";
            column.Caption = Lang.TaxID;
            column.CellStyle.VerticalAlign = VerticalAlign.Top;
        });



        settings.HtmlDataCellPrepared = (s, e) =>
        {
            if (e.DataColumn.FieldName == "AccessLevel")
            {
                if (e.GetValue("AccessLevel").ToString() == "None")
                {
                    e.Cell.Text = "";
                }
            }
        };

        settings.EnableTheming = true;



    });
}
@grid.Bind(Model).GetHtml()