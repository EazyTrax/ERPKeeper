@model ERPKeeper.Node.Models.Estimations.PurchaseQuote
@{
    Layout = null;
}


<div class="p-2 bg-fb1">
    @using (Html.BeginForm("Save", "Quote", new { }, FormMethod.Post, new { @id = "SaveForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Uid)
        @Html.HiddenFor(model => model.Total)
        @Html.HiddenFor(model => model.LinesTotal)
        @Html.HiddenFor(model => model.ProfileGuid)

        <div class="row">
            <div class="col-6">
                @Html.DevExpress().FormLayout(settings =>
       {
           settings.Name = "Item";
           settings.Width = Unit.Percentage(100);
           settings.EncodeHtml = false;


           settings.Items.AddGroupItem(groupSettings =>
           {
               groupSettings.Caption = "Home";
               groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
               groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

               groupSettings.Items.Add(m => m.TrnDate, itemSettings =>
               {
                   itemSettings.Caption = "Trn Date";
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;

               });

               groupSettings.Items.Add(m => m.Reference, itemSettings =>
               {
                   itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                   itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;



                   TextBoxSettings tb = (TextBoxSettings)itemSettings.NestedExtensionSettings;
                   tb.Properties.MaxLength = 30;
               });



           });

           if (Model.ProfileGuid != null)
           {
               settings.Items.AddGroupItem(groupSettings =>
               {
                   groupSettings.Caption = "Profile"; ;
                   groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
                   groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

                   groupSettings.Items.Add(m => m.ProfileGuid, itemSettings =>
                   {
                       itemSettings.ShowCaption = DefaultBoolean.False;
                       itemSettings.SetNestedContent(Html.Partial("_ProfileDetail", Model).ToString());
                   });
               });
           }





       }).GetHtml()
            </div>

            <div class="col-6">
                @Html.DevExpress().FormLayout(settings =>
           {
               settings.Name = "Item2";
               settings.Width = Unit.Percentage(100);
               settings.ColCount = 1;
               settings.EncodeHtml = false;



               settings.Items.AddGroupItem(groupSettings =>
               {

                   groupSettings.Caption = "Other Detail"; ;
                   groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
                   groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;

                   groupSettings.Items.Add(m => m.PaymentTermGuid, itemSettings =>
                   {
                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.Caption = itemSettings.Caption = Html.ActionLink("Payment Term", "", "PaymentTerms", new { Area = "Setting" }, null).ToHtmlString();
                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                       ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                       cb.Properties.TextField = "Name";
                       cb.Properties.ValueField = "Uid";
                       cb.Properties.ValueType = typeof(Guid);
                       cb.Properties.DataSource = erpNodeDBContext.PaymentTerms.ToList();
                       cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   });

                   groupSettings.Items.Add(m => m.Memo, itemSettings =>
                   {
                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;


                   });

                   groupSettings.Items.Add(m => m.ShippingTermGuid, itemSettings =>
                   {
                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.Caption = Html.ActionLink("Shipping Term", "", "ShippingTerms", new { Area = "Setting" }, null).ToHtmlString();
                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                       ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                       cb.Properties.TextField = "Name";
                       cb.Properties.ValueField = "Uid";
                       cb.Properties.ValueType = typeof(Guid);
                       cb.Properties.DataSource = erpNodeDBContext.ShippingTerms.ToList();
                       cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   });


                   groupSettings.Items.Add(m => m.ShippingMethodGuid, itemSettings =>
                   {
                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.Caption = Html.ActionLink("Shipping Method", "", "ShippingMethods", new { Area = "Setting" }, null).ToHtmlString();

                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                       ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                       cb.Properties.TextField = "Name";
                       cb.Properties.ValueField = "Uid";
                       cb.Properties.ValueType = typeof(Guid);
                       cb.Properties.DataSource = erpNodeDBContext.ShippingMethods.ToList();
                       cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   });

                   groupSettings.Items.Add(m => m.ProjectGuid, itemSettings =>
                   {

                       itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                       itemSettings.Caption = itemSettings.Caption = Html.ActionLink("Project", "Home", "Projects", new { Area = "Projects" }, null).ToHtmlString();
                       itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                       ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                       cb.Properties.TextField = "Name";
                       cb.Properties.ValueField = "Uid";
                       cb.Properties.ValueType = typeof(Guid);
                       cb.Properties.DataSource = erpNodeDBContext.Projects.ToList();
                       cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   });
               });

              
                   settings.Items.AddGroupItem(groupSettings =>
                   {
                       groupSettings.Caption = "Tax"; ;
                       groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
                       groupSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Black;
                       groupSettings.Items.Add(m => m.TaxCodeGuid, itemSettings =>
                       {
                           itemSettings.CaptionCellStyle.CssClass = "CaptionWidth";
                           itemSettings.Caption = Html.ActionLink("Tax Group", "", "TaxCodes", new { Area = "Setting" }, null).ToHtmlString();


                           itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

                           ComboBoxSettings cb = (ComboBoxSettings)itemSettings.NestedExtensionSettings;

                           cb.Properties.TextField = "Name";
                           cb.Properties.ValueField = "Uid";
                           cb.Properties.ValueType = typeof(Guid);
                           cb.Properties.DataSource = Organization.TaxCodes.ListAll();
                           cb.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;

                       });

                   });
               




               settings.Items.Add(item =>
               {
                   item.NestedExtensionType = FormLayoutNestedExtensionItemType.Button;
                   item.ShowCaption = DefaultBoolean.False;
                   item.HorizontalAlign = FormLayoutHorizontalAlign.Right;
                   var button = (ButtonSettings)item.NestedExtensionSettings;
                   button.Name = "SaveButton";
                   button.Text = "Save";
                   button.UseSubmitBehavior = true;

               });


           }).GetHtml()
            </div>
        </div>
    }

</div>

