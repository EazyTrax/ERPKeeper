// <auto-generated />
using System;
using ERPKeeperCore.Enterprise.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPKeeperCore.Enterprise.Migrations
{
    [DbContext(typeof(ERPCoreDbContext))]
    [Migration("20240427030235_DB-1.02")]
    partial class DB102
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BalanceCalulatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurentCredit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CurrentDebit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashEquivalent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFolder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLiquidity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AssetValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DepreciationPerYear")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("LastCreateSchedule")
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SavageValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartDeprecationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.AssetDeprecateSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DepreciateAccumulation")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DepreciateOffsetValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DepreciationValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PostStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("DeprecateSchedules");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.AssetType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccumulateDeprecateAccId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccumulateDeprecateAccId");

                    b.Property<Guid?>("AmortizeExpenseAccId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AmortizeExpenseAccId");

                    b.Property<Guid?>("AwaitDeprecateAccId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AwaitDeprecateAccId");

                    b.Property<string>("CodePrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeprecatedAble")
                        .HasColumnType("bit");

                    b.Property<int>("DepreciationMethod")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseAccId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseAccId");

                    b.Property<decimal>("ScrapValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UseFulLifeYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccumulateDeprecateAccId");

                    b.HasIndex("AmortizeExpenseAccId");

                    b.HasIndex("AwaitDeprecateAccId");

                    b.HasIndex("PurchaseAccId");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.CapitalActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("EachStockParValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("EquityAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("PostStatus")
                        .HasColumnType("int");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TrnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetAccountId");

                    b.HasIndex("EquityAccountId");

                    b.ToTable("CapitalActivities");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.DataItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ERP_Datum");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.DefaultAccount", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Type");

                    b.HasIndex("AccountId");

                    b.ToTable("ERP_Accounting_Default_Account");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.FiscalYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ERP_Fiscal_Years");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.FiscalYearAccountBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ClosingCredit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ClosingDebit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("FiscalYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OpeningCredit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OpeningDebit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("FiscalYearAccountBalance");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Items.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PublishOnline")
                        .HasColumnType("bit");

                    b.Property<string>("ShotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("IncomeAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<bool>("OnlineSale")
                        .HasColumnType("bit");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("PurchaseAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int");

                    b.Property<string>("UPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UPC");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("IncomeAccountId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("PurchaseAccountId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.PaymentTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("DueDayCount")
                        .HasColumnType("int");

                    b.Property<int>("MaxDayCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRDVerify")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelfOrganization")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileType")
                        .HasColumnType("int");

                    b.Property<string>("ShotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileAddress", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfileId");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AddressId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ERP_Profiles_Addresses");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileBankAccount", b =>
                {
                    b.Property<Guid>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BankProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfileId");

                    b.HasKey("BankAccountId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ERP_Profiles_BankAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShippingNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ERP_Profiles_ContactPerson");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ERP_Profile_Roles");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FiscalYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LinesTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("TaxCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxPeriodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TrnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxCodeId");

                    b.HasIndex("TaxPeriodId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.PurchaseItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseItem");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FiscalYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LinesTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("TaxCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxPeriodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TrnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaxCodeId");

                    b.HasIndex("TaxPeriodId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.SaleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.TaxCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CloseToAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommercialCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InputTaxAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsReady")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OutputTaxAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TaxDirection")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaxGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxPayableAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("TaxReceivableAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("isRecoverable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AssignAccountId");

                    b.HasIndex("CloseToAccountId");

                    b.HasIndex("InputTaxAccountId");

                    b.HasIndex("OutputTaxAccountId");

                    b.HasIndex("TaxAccountId");

                    b.HasIndex("TaxPayableAccountId");

                    b.ToTable("TaxCodes");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.TaxPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CloseToAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FiscalYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InputBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("InputCommercialCount")
                        .HasColumnType("int");

                    b.Property<decimal>("InputTaxBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("LiabilityPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("No")
                        .HasColumnType("int");

                    b.Property<decimal>("OutputBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OutputCommercialCount")
                        .HasColumnType("int");

                    b.Property<decimal>("OutputTaxBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PostStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("TrnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CloseToAccountId");

                    b.ToTable("TaxPeriods");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Items.ItemGroup", b =>
                {
                    b.HasBaseType("ERPKeeperCore.Enterprise.Models.Items.Item");

                    b.HasDiscriminator().HasValue("ItemGroup");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Asset", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId");

                    b.Navigation("AssetType");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.AssetDeprecateSchedule", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Asset", "Asset")
                        .WithMany("DepreciationSchedules")
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.AssetType", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AccumulateDeprecateAcc")
                        .WithMany()
                        .HasForeignKey("AccumulateDeprecateAccId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AmortizeExpenseAccount")
                        .WithMany()
                        .HasForeignKey("AmortizeExpenseAccId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AwaitDeprecateAccount")
                        .WithMany()
                        .HasForeignKey("AwaitDeprecateAccId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AssetAccount")
                        .WithMany()
                        .HasForeignKey("PurchaseAccId");

                    b.Navigation("AccumulateDeprecateAcc");

                    b.Navigation("AmortizeExpenseAccount");

                    b.Navigation("AssetAccount");

                    b.Navigation("AwaitDeprecateAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.CapitalActivity", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AssetAccount")
                        .WithMany()
                        .HasForeignKey("AssetAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "EquityAccount")
                        .WithMany()
                        .HasForeignKey("EquityAccountId");

                    b.Navigation("AssetAccount");

                    b.Navigation("EquityAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.DefaultAccount", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.FiscalYearAccountBalance", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPKeeperCore.Enterprise.Models.FiscalYear", null)
                        .WithMany("FiscalYearAccountBalances")
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Items.Item", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Items.Brand", "Brand")
                        .WithMany("Items")
                        .HasForeignKey("BrandId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "IncomeAccount")
                        .WithMany()
                        .HasForeignKey("IncomeAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Items.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "PurchaseAccount")
                        .WithMany()
                        .HasForeignKey("PurchaseAccountId");

                    b.Navigation("Brand");

                    b.Navigation("IncomeAccount");

                    b.Navigation("ItemGroup");

                    b.Navigation("PurchaseAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileAddress", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Profile", "Profile")
                        .WithMany("Addresses")
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileBankAccount", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Profile", "Profile")
                        .WithMany("BankAccounts")
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileContact", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Profile", "Profile")
                        .WithMany("Contacts")
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.ProfileRole", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Profile", "Profile")
                        .WithMany("ProfileRoles")
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Project", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Project", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Purchase", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.TaxCode", "TaxCode")
                        .WithMany()
                        .HasForeignKey("TaxCodeId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.TaxPeriod", "TaxPeriod")
                        .WithMany()
                        .HasForeignKey("TaxPeriodId");

                    b.Navigation("TaxCode");

                    b.Navigation("TaxPeriod");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.PurchaseItem", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Purchase", "Purchase")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId");

                    b.Navigation("Item");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Sale", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Project", null)
                        .WithMany("Commercials")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.TaxCode", "TaxCode")
                        .WithMany()
                        .HasForeignKey("TaxCodeId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.TaxPeriod", "TaxPeriod")
                        .WithMany("Commercials")
                        .HasForeignKey("TaxPeriodId");

                    b.Navigation("TaxCode");

                    b.Navigation("TaxPeriod");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.SaleItem", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Sale", "Sale")
                        .WithMany("Items")
                        .HasForeignKey("SaleId");

                    b.Navigation("Item");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.TaxCode", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "AssignAccount")
                        .WithMany()
                        .HasForeignKey("AssignAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "CloseToAccount")
                        .WithMany()
                        .HasForeignKey("CloseToAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "InputTaxAccount")
                        .WithMany()
                        .HasForeignKey("InputTaxAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "OutputTaxAccount")
                        .WithMany()
                        .HasForeignKey("OutputTaxAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "TaxAccount")
                        .WithMany()
                        .HasForeignKey("TaxAccountId");

                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "TaxPayableAccount")
                        .WithMany()
                        .HasForeignKey("TaxPayableAccountId");

                    b.Navigation("AssignAccount");

                    b.Navigation("CloseToAccount");

                    b.Navigation("InputTaxAccount");

                    b.Navigation("OutputTaxAccount");

                    b.Navigation("TaxAccount");

                    b.Navigation("TaxPayableAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.TaxPeriod", b =>
                {
                    b.HasOne("ERPKeeperCore.Enterprise.Models.Account", "CloseToAccount")
                        .WithMany()
                        .HasForeignKey("CloseToAccountId");

                    b.Navigation("CloseToAccount");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Asset", b =>
                {
                    b.Navigation("DepreciationSchedules");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.AssetType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.FiscalYear", b =>
                {
                    b.Navigation("FiscalYearAccountBalances");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Items.Brand", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Profile", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("BankAccounts");

                    b.Navigation("Contacts");

                    b.Navigation("ProfileRoles");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Project", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Commercials");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Purchase", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.Sale", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPKeeperCore.Enterprise.Models.TaxPeriod", b =>
                {
                    b.Navigation("Commercials");
                });
#pragma warning restore 612, 618
        }
    }
}
