
<div id="treeList" class="mt-2 mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Assets.AssetDeprecateSchedule>()
            .ID("gridList")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Assets/AssetDeprecateSchedules/All")
            )
            .KeyExpr("Id")
            .Width("100%")
            .RowAlternationEnabled(true).AllowColumnReordering(true)
            .ShowRowLines(true)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))
            .AllowColumnResizing(true).AllowColumnReordering(true)
            
            .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
            .ColumnAutoWidth(false)
            .RowDragging(rd => rd
            .AllowDropInsideItem(false)
            .AllowReordering(false)

            )
            .Columns(columns =>
            {
                columns.AddFor(m => m.AssetId)
            .HeaderCellTemplate(@<text>Type</text>)
        .Lookup(lookup => lookup
        .DataSource(Organization.ErpCOREDBContext.Assets.Select(i => new { Value = i.Id, Text = i.Name }).ToList())
        .DisplayExpr("Text")
        .ValueExpr("Value"))
        .CellTemplate(@<text><a href="/@CompanyId/Assets/Assets/<%= data.AssetId %>/"><%= displayValue %></a></text>);





                columns.AddFor(m => m.StartDate).Width(130)
                .HeaderCellTemplate(@<text>Start</text>)
                .SortOrder(SortOrder.Asc).SortIndex(1);

                columns.AddFor(m => m.EndDate).Width(130)
                .HeaderCellTemplate(@<text>End</text>)
                .SortOrder(SortOrder.Asc).SortIndex(1);
               
                columns.AddFor(m => m.TotalDays)
                .Width(60).Format("##0")
                .HeaderCellTemplate(@<text>Days</text>);
                
                columns.AddFor(m => m.DepreciationValue)
                .Format(",##0.00")
                .Width(130)
                .HeaderCellTemplate(@<text>Depreciate</text>);
                   
                columns.AddFor(m => m.DepreciateAccumulation)
                .Format(",##0.00")
                .Width(130)
                .HeaderCellTemplate(@<text>Accumulate</text>);
               
                columns.AddFor(m => m.RemainValue)
                .Format(",##0.00")
                .Width(130)
                .HeaderCellTemplate(@<text>Value</text>);

                columns.AddFor(m => m.Id)
                .Width(30)
                .HeaderCellTemplate(@<text></text>)
                .CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);

            })
        .Summary(s => s.TotalItems(items =>
        {
            items.AddFor(m => m.DepreciationValue).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0.00");
            items.AddFor(m => m.DepreciateAccumulation).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0.00");
            items.AddFor(m => m.RemainValue).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0.00");
        }))
        )
</div>


