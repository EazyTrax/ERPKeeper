
<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Taxes.TaxPeriod>()
        .ID("gridList")
        .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Taxes/TaxPeriods/All")
        .InsertUrl($"/API/{CompanyId}/Taxes/TaxPeriods/Insert")
        .UpdateUrl($"/API/{CompanyId}/Taxes/TaxPeriods/Update")
        .UpdateMethod("Post")
        )
        .KeyExpr("Id")
        .Width("100%")
        .RowAlternationEnabled(true)


        .ShowRowLines(true)
        .ShowBorders(false)
        .Paging(pagging => pagging.PageSize(100))
        .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))


        .AllowColumnResizing(true)
        .HeaderFilter(headerFilter => headerFilter.Visible(true))

        .ColumnAutoWidth(false)
        @*.AutoExpandAll(true)*@
        .RowDragging(rd => rd
        .AllowDropInsideItem(false)
        .AllowReordering(false)
        @*.OnDragChange("onDragChange")
    .OnDragEnd("onDragEnd")
    .ShowDragIcons(false)*@
        )
        .Columns(columns =>
        {
            @* columns.AddFor(m => m.Status).Width(60).SortOrder(SortOrder.Asc).SortIndex(2).Lookup(lookup => lookup
    .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Taxes.Enums.Taxestatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
    .DisplayExpr("Text")
    .ValueExpr("Value")
    );*@




            columns.AddFor(m => m.Name)
    .CellTemplate(@<text> <a href="/@CompanyId/Taxes/TaxPeriods/<%= data.Id %>/"><%= data.Name %></a></text>
    );

            columns.Add()
        .Caption("Purchases")
        .Columns(subColumns =>
        {
                subColumns.AddFor(m => m.PurchasesCount)
            .HeaderCellTemplate(@<text>Purchases</text>)
        .CellTemplate(@<text> <a href="/@CompanyId/Taxes/TaxPeriods/<%= data.Id %>/Purchases"><%= data.PurchasesCount %></a></text>)
            .Format(Format.FixedPoint);

                subColumns.AddFor(m => m.PurchasesTaxBalance)
            .HeaderCellTemplate(@<text>PurchasesTax</text>)
            .Format(Format.FixedPoint);

            });

            columns.Add()
        .Caption("Sales")
        .Columns(subColumns =>
        {
             

                subColumns.AddFor(m => m.SalesCount)
            .HeaderCellTemplate(@<text>Sales</text>)
            .CellTemplate(@<text> <a href="/@CompanyId/Taxes/TaxPeriods/<%= data.Id %>/Sales"><%= data.SalesCount %></a></text>)
            .Format(Format.FixedPoint);

                subColumns.AddFor(m => m.SalesTaxBalance)
            .HeaderCellTemplate(@<text>SalesTax</text>)
            .Format(Format.FixedPoint);

            });


            columns.AddFor(m => m.ClosingAmount)
        .HeaderCellTemplate(@<text>ClosingAmount</text>)
        .Format(Format.FixedPoint);

        

            columns.AddFor(m => m.CloseToAccountId)
        .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
        .Width(200).HeaderCellTemplate(@<text>CloseTo</text>);




            columns.AddFor(m => m.IsPosted)
            .AllowEditing(false)
            .Width(30)
            .HeaderCellTemplate(@<text> </text>)
            .CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);




        })
        )
</div>


