@model ERPKeeperCore.Enterprise.Models.Taxes.TaxPeriod


<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Suppliers.Purchase>()
            .ID("gridList")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Taxes/TaxPeriods/{Model.Id}/Purchases/all")
            )
            .RowAlternationEnabled(true)
            .KeyExpr("Id")


            .ShowRowLines(false)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))

            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))

            .ColumnAutoWidth(false)

            .Columns(columns =>
            {


                columns.AddFor(m => m.Date).Format("dd-MM-yyyy").SortOrder(SortOrder.Desc).SortIndex(1).Width(130);

                columns.AddFor(m => m.Status).Width(80).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Suppliers.Enums.PurchaseStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );

                columns.AddFor(m => m.Name).Width(130)
            .CellTemplate(@<text><a href="/@CompanyId/Profiles/Suppliers/Purchases/<%= data.Id %>/"><%= data.Name %></a></text>);


                columns.AddFor(m => m.SupplierId).Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Profiles/Suppliers/Suppliers/<%= data.SupplierId %>/"><%= displayValue %></a></text>);


                columns.AddFor(m => m.Reference).Width(180);

                columns.AddFor(m => m.LinesTotal).AllowEditing(false).Width(130).Format(Format.FixedPoint);

                columns.AddFor(m => m.Tax).AllowEditing(false).Width(130).Format(Format.FixedPoint);

                columns.AddFor(m => m.Total).AllowEditing(false).Width(130).Format(Format.FixedPoint);



                columns.AddFor(m => m.TaxCodeId)
            .Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.TaxCodes.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .HeaderCellTemplate(@<text>TaxCode</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Taxes/TaxCodes/<%= data.TaxCodeId %>/"><%= displayValue %></a></text>);




                columns.AddFor(m => m.IsPosted).AllowEditing(false).Width(30).HeaderCellTemplate(@<text> </text>).CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);








            }).Summary(s => s.TotalItems(items =>
    {
            items.AddFor(m => m.LinesTotal).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
            items.AddFor(m => m.Tax).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
            items.AddFor(m => m.Total).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
        }))
        )
</div>

