@model ERPKeeperCore.Enterprise.Models.Taxes.TaxPeriod



<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Customers.Sale>()
            .ID("gridList")
            .KeyExpr("Id")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Taxes/TaxPeriods/{Model.Id}/Sales/all")
            )
            .RowAlternationEnabled(true)
            .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))
            .ShowRowLines(false)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))

            .AllowColumnResizing(true)
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
            .FilterRow(m => m.Visible(true))
            .ColumnAutoWidth(false)
            .Columns(columns =>
            {




                columns.AddFor(m => m.Date).AllowEditing(false).Format("dd-MM-yyyy").SortOrder(SortOrder.Desc).SortIndex(1).Width(130);

                columns.AddFor(m => m.Status).AllowEditing(false).Width(80).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Customers.Enums.SaleStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );

                columns.AddFor(m => m.Name).AllowEditing(false).AllowEditing(false).Width(130)
            .CellTemplate(@<text><a href="/@CompanyId/Profiles/Customers/Sales/<%= data.Id %>/"><%= data.Name %></a></text>);


                columns.AddFor(m => m.CustomerId).Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Profiles/Customers/Customers/<%= data.CustomerId %>/"><%= displayValue %></a></text>);


                columns.Add().DataField("Reference").Width(180);
                columns.Add().DataField("LinesTotal").AllowEditing(false).Width(130).Format(Format.FixedPoint);
                columns.Add().DataField("Total").AllowEditing(false).Width(130).Format(Format.FixedPoint);



                columns.AddFor(m => m.TaxCodeId).Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.TaxCodes.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .HeaderCellTemplate(@<text>TaxCode</text>)
            .CellTemplate(@<text><a href="/@CompanyId/Taxes/TaxCodes/<%= data.TaxCodeId %>/"><%= displayValue %></a></text>);

                columns.AddFor(m => m.IsPosted)
                .AllowEditing(false)
                .Width(30)
                .HeaderCellTemplate(@<text> </text>)
                .CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);


            })
        )
</div>

