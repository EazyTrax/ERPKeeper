@model ERPKeeperCore.Enterprise.Models.Accounting.FiscalYear
@using ERPKeeperCore.Enterprise.Models.Accounting.Enums


<div class="row">
    <div class="col-8 p-3 col-center mh-100v border-right border-2">


        <div class="text-center font-weight-600  mb-3">
            บริษัท เดอะ เอ็นจิเนียริ่ง คร๊าฟ จำกัด<br />
            งบแสดงการคำนวณภาษี
        </div>

        <div class="row mb-3">
            <div class="col-12  font-weight-600 ">
                รายได้
            </div>
            @{
                var incomes = Model.FiscalYearAccountBalances
                .Where(m => m.Account.Type == ERPKeeperCore.Enterprise.Models.Accounting.Enums.AccountTypes.Income)
                .OrderByDescending(m => (m.Debit + m.Credit))
                .ToList();

                foreach (var line in incomes)
                {
                    <div class="col-4">
                        <a href="/@CompanyId/Accounting/Accounts/@line.AccountId/" target="_blank">
                            @line.Account.Name
                        </a>
                    </div>
                    <div class="col-3">
                        @line.Account.SubType.ToString()
                    </div>
                    <div class="col-2">
                    </div>
                    <div class="col-3 text-right">
                        @line.Credit.ToString("N2")
                    </div>
                }

                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    รวมรายได้
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @incomes.Sum(m => m.Credit).ToString("N2")
                </div>
            }
        </div>
        <div class="row">
            <div class="col-12  font-weight-600 ">
                ค่าใช้จ่าย
            </div>

            @{
                var expenses = Model.FiscalYearAccountBalances
                .Where(m => m.Account.Type == ERPKeeperCore.Enterprise.Models.Accounting.Enums.AccountTypes.Expense)
                // .Where(m => m.Account.SubType != AccountSubTypes.TaxExpense)
                .Where(m => m.Account.SubType != AccountSubTypes.IncomeTaxExpense)
                // .Where(m => m.Account.SubType != AccountSubTypes.UnCliamableExpense)
                .OrderBy(x => x.Account.SubType)
                .ToList();

                foreach (var line in expenses)
                {
                    <div class="col-4">
                        <a href="/@CompanyId/Accounting/Accounts/@line.AccountId/" target="_blank">
                            @line.Account.Name
                        </a>
                    </div>
                    <div class="col-4">
                        @line.Account.SubType
                    </div>
                    <div class="col-2">
                    </div>
                    <div class="col-2 text-right">
                        @line.Debit.ToString("N2")
                    </div>
                }

                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    รวมค่าใช้จ่าย
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @expenses.Sum(m => m.Debit).ToString("N2")
                </div>


                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    กำไรขั้นต้น
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @{
                        var grossMargin = incomes.Sum(m => m.Credit) - expenses.Sum(m => m.Debit);
                    }
                    @(grossMargin.ToString("N2"))
                </div>


                var IncomeTaxBalance = Model.FiscalYearAccountBalances
                .Where(m => m.Account.Type == ERPKeeperCore.Enterprise.Models.Accounting.Enums.AccountTypes.Expense)
                .Where(m => m.Account.SubType == AccountSubTypes.IncomeTaxExpense)
                .FirstOrDefault();


                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    <a href="/@CompanyId/Accounting/Accounts/@IncomeTaxBalance.Account.Id/" target="_blank">
                        ภาษีเงินได้
                    </a>
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @if (IncomeTaxBalance != null)
                    {
                        <span>@(IncomeTaxBalance.Debit.ToString("N2"))</span>
                    }


                </div>


                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    กำไรสุทธิ
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @((grossMargin - IncomeTaxBalance.Debit).ToString("N2"))
                </div>




            }

            <div class="col-12 mt-4"></div>
            <div class="col-12  font-weight-600 ">
                ค่าใช้จ่ายต้องห้าม
            </div>
            @{
                var UnClaimExpenses = Model.FiscalYearAccountBalances
                .Where(m => m.Account.Type == ERPKeeperCore.Enterprise.Models.Accounting.Enums.AccountTypes.Expense)
                .Where(m => m.Account.SubType == AccountSubTypes.TaxExpense
                || m.Account.SubType == AccountSubTypes.UnCliamableExpense)
                .OrderBy(x => x.Account.SubType)
                .ToList();




                foreach (var line in UnClaimExpenses)
                {
                    <div class="col-4">
                        <a href="/@CompanyId/Accounting/Accounts/@line.AccountId/" target="_blank">
                            @line.Account.Name
                        </a>
                    </div>
                    <div class="col-3">
                        @line.Account.SubType
                    </div>
                    <div class="col-2">
                    </div>
                    <div class="col-3 text-right">
                        @line.Debit.ToString("N2")
                    </div>
                }

                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2  border-dark border-top  border-bottom">
                    รวม
                </div>
                <div class="col-3 text-right font-weight-600 border-dark border-top  border-bottom">
                    @UnClaimExpenses.Sum(m => m.Debit).ToString("N2")
                </div>


                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-3 border-dark border-top  border-bottom">
                    กำไรสำหรับคำนวนภาษ๊
                </div>
                <div class="col-2 text-right font-weight-600 border-dark border-top  border-bottom">

                    @{
                        var totalProfitFortax = incomes.Sum(m => m.Credit) - expenses.Sum(m => m.Debit) + UnClaimExpenses.Sum(m => m.Debit);

                    }
                    @(totalProfitFortax.ToString("N2"))
                </div>
            }



        </div>




        <div class="row mt-4">
            <div class="col-12  font-weight-600 ">
                ภาษีเงินได้
            </div>
            @{
                <div class="col-4">
                    0-300,000
                </div>
                <div class="col-3">
                </div>
                <div class="col-2">
                    @{
                        decimal dedecut = 0;
                        decimal remainIncomeTax = totalProfitFortax;

                        if (remainIncomeTax > 0 && remainIncomeTax <= 300000)
                            dedecut = remainIncomeTax;
                        else if (remainIncomeTax > 300000)
                            dedecut = 300000;

                        remainIncomeTax = remainIncomeTax - dedecut;
                    }
                    <span>@dedecut</span>
                </div>

                <div class="col-3 text-right ">
                    @((dedecut * 0).ToString("N2"))
                </div>
                <div class="col-4">
                    300,000 - @grossMargin
                </div>
                <div class="col-3">
                </div>
                <div class="col-2 ">
                    @remainIncomeTax
                </div>
                <div class="col-3 text-right ">
                    @((remainIncomeTax * 15 / 100).ToString("N2"))
                </div>

                <div class="col-4">
                </div>
                <div class="col-3">
                </div>
                <div class="col-2 font-weight-600 border-dark border-top  border-bottom">
                    @totalProfitFortax
                </div>
                <div class="col-3 text-right font-weight-600  border-dark border-top  border-bottom">
                    @((remainIncomeTax * 15 / 100).ToString("N2"))
                </div>
            }
        </div>
    </div>
</div>
