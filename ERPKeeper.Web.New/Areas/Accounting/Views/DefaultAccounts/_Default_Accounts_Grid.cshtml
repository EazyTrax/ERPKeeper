





<div class="mb-2 border-top">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Accounting.DefaultAccount>()
        .ID("DataGridDefaultAccounts")
        .KeyExpr("Type")
        .DataSource(d => d.RemoteController()
        .Key("Type")
        .LoadUrl($"/api/{CompanyId}/Accounting/DefaultAccounts/All")
        .InsertUrl($"/api/{CompanyId}/Accounting/DefaultAccounts/Insert")
        .UpdateUrl($"/api/{CompanyId}/Accounting/DefaultAccounts/Update")
        .UpdateMethod("Post")
        .DeleteUrl($"/api/{CompanyId}/Accounting/DefaultAccounts/Delete")
        .DeleteMethod("Post"))
        .AllowColumnReordering(true)
        .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true)) 
        .RowAlternationEnabled(true).AllowColumnReordering(true).ShowRowLines(true).HoverStateEnabled(true)
        .ShowColumnLines(true)
        .ColumnAutoWidth(false)
        .Width("100%")
        .Columns(columns =>
        {
            @*  
            columns.AddFor(m => m.AccountType).CellTemplate(@<text>
                <div>
                    <a href="/@CompanyId/Accounting/DefaultAccounts/<%= data.Id %>/"><%= data.Name %></a>
                </div>
            </text>);
            *@

            columns.AddFor(m => m.Type)
            .Width(250)
            .SortOrder(SortOrder.Asc)
            .SortIndex(1)
            .Lookup(lookup => lookup.DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Accounting.Enums.DefaultAccountType>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text })).DisplayExpr("Text").ValueExpr("Value"));


            columns.AddFor(m => m.AccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .HeaderCellTemplate(@<text>Account</text>)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.AccountId %>/"><%= displayValue %></a></text>); ;

            columns.AddFor(m => m.AccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.ToList().Select(t => new { t.Id, Type = t.Type.ToString() }).OrderBy(t => t.Type).ToList()).DisplayExpr("Type").ValueExpr("Id"))
            .Width(150)
            .AllowEditing(false)
            .HeaderCellTemplate(@<text>AccType</text>)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.AccountId %>/"><%= displayValue %></a></text>);

            columns.AddFor(m => m.AccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.ToList().Select(t => new { t.Id, SubType = t.SubType.ToString() }).OrderBy(t => t.SubType).ToList()).DisplayExpr("SubType").ValueExpr("Id"))
            .Width(150)
            .AllowEditing(false)
            .HeaderCellTemplate(@<text>AccType</text>)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.AccountId %>/"><%= displayValue %></a></text>);

            
            })
        )
</div>










