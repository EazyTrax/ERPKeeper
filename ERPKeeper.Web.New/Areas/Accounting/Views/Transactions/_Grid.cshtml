@using ERPKeeperCore.Enterprise.Models.Accounting.Enums

<div class="mb-2 border-top">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Accounting.Transaction>()
            .ID("AssetsTreeList")
            .KeyExpr("Id")
            .DataSource(d => d.RemoteController()
            .LoadUrl($"/api/{CompanyId}/Accounting/Transactions/All")
            .InsertUrl($"/api/{CompanyId}/Accounting/Transactions/Insert")
            .UpdateUrl($"/api/{CompanyId}/Accounting/Transactions/Update")
            .UpdateMethod("Post")
            .DeleteUrl($"/api/{CompanyId}/Accounting/Transactions/Delete")
            .DeleteMethod("Post"))
            .AllowColumnReordering(true)
            .RowAlternationEnabled(true).ShowRowLines(true).HoverStateEnabled(true)
            .ShowColumnLines(true)
            .ShowBorders(false)
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
            .FilterRow(filterflex => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
            .ColumnAutoWidth(false)
            .Paging(pagging => pagging.PageSize(100))
            .ColumnChooser(columnChooser => columnChooser.Enabled(true))
            .GroupPanel(gp=>gp.Visible(true))
            .Columns(columns =>
            {
                columns.AddFor(m => m.FiscalYearId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.FiscalYears.ToList().Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .Width(150)
            .HeaderCellTemplate(@<text>Account</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Accounting/FiscalYears/<%= data.FiscalYearId %>/"><%= displayValue %></a></text>);




                columns.AddFor(m => m.Name)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Transactions/<%= data.Id %>/"><%= data.Name %></a></text>);

                columns.AddFor(m => m.Reference)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Transactions/<%= data.Id %>/"><%= data.Reference %></a></text>);

                columns.AddFor(m => m.Date)
            .Width(150);
                columns.AddFor(m => m.Type)
            .Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<TransactionType>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text").ValueExpr("Value"));

                columns.AddFor(m => m.Debit)
            .Width(130)
            .Format("#,##0.00");

                columns.AddFor(m => m.Credit)
            .Width(130)
            .Format("#,##0.00");


                columns.AddFor(m => m.Diff)
            .Width(130)
            .Format("#,##0.00");

                columns.AddFor(m => m.IsPosted)
            .AllowEditing(false)
            .Width(30)
            .HeaderCellTemplate(@<text> </text>)
        .CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>
        );

            })
        .Summary(s => s.TotalItems(items =>
        {


            items.AddFor(m => m.Debit).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0.00");
            items.AddFor(m => m.Credit).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0.00");

        }))

        )
</div>