@model ERPKeeperCore.Enterprise.Models.Accounting.TransactionLedger

@{
    if (Model != null)
    {

        <div class="border-top border-bottom mt-1">
            @Model.Id
        </div>

        <div class="mb-2 border-top border-bottom">
            @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Accounting.Ledger>()
                .ID("JournalLedgerList")
                .KeyExpr("Uid")
                .DataSource(d => d.RemoteController().LoadUrl($"/api/{CompanyId}/Accounting/Journals/{Model.Id}/Ledgers/All"))
                .AllowColumnReordering(true)
                .RowAlternationEnabled(false).ShowRowLines(true).HoverStateEnabled(true)
                .ShowColumnLines(true)
                .ShowBorders(false)
                .ColumnAutoWidth(false)
                .Paging(pagging => pagging.PageSize(100))
                .Columns(columns =>
                {
                    columns.AddFor(m => m.AccountUid)
                .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.AccountItems.Select(t => new { t.Uid, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Uid"))
                .HeaderCellTemplate(@<text>Account</text>)
                .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.AccountUid %>/"><%= displayValue %></a></text>);


                    columns.AddFor(m => m.Debit).Width(100).Format(",##0.00");
                    columns.AddFor(m => m.Credit).Width(100).Format(",##0.00");
                })
                )
        </div>
    }
    else
    {

        <div class="border-top border-bottom mt-1">
           UnPosted
        </div>
    }
}









