@model ERPKeeperCore.Enterprise.Models.Customers.SaleQuote
@using ERPKeeperCore.Enterprise.Models.Customers.Enums

@{
    var editAble = IsOnEditMode && Model.Status != SaleQuoteStatus.Invoice;
}




<div id="treeListDemo" class="mb-3 border">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Customers.SaleQuoteItem>()
            .ID("gridList")
            .KeyExpr("Id")
            .ShowRowLines(true)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s => s.Enabled(true)))
            .Width("100%")
            .WordWrapEnabled(true)
            .ColumnAutoWidth(false)
            .DataSource(d =>
            d.RemoteController()
            .Key("Id")
            .LoadUrl($"/API/{CompanyId}/Customers/SaleQuotes/{Model.Id}/Items/All")
            .InsertUrl($"/API/{CompanyId}/Customers/SaleQuotes/{Model.Id}/Items/Insert")
            .UpdateUrl($"/API/{CompanyId}/Customers/SaleQuotes/{Model.Id}/Items/Update")
            .UpdateMethod("Post")
            .DeleteUrl($"/API/{CompanyId}/Customers/SaleQuotes/{Model.Id}/Items/Delete")
            .DeleteMethod("Post"))
            .Editing(editing => editing.Mode(GridEditMode.Popup).AllowUpdating(editAble).AllowDeleting(editAble).UseIcons(true))
            .KeyExpr("Id")
            .Columns(columns =>
            {
                columns.AddFor(m => m.Order).SortOrder(SortOrder.Asc).SortIndex(0).Width(40);
                columns.AddFor(m => m.PartNumber).Width(150).CellTemplate(@<text><a target="_blank" href="/@CompanyId/Products/Items/<%= data.ItemId %>/"><%= data.PartNumber %></a></text>);
                columns.AddFor(m => m.Description).FormItem(i => i.Editor(e => e.TextArea().MinHeight(250)));
                columns.AddFor(m => m.Price).Width(130).Format("#,##0.00");
                columns.AddFor(m => m.Quantity).Width(130).Format("#,##0.00");
                columns.AddFor(m => m.LineTotal).AllowEditing(false).Width(130).Format("#,##0.00").FormItem(i => i.Visible(false));
            }) .Summary(s =>
        s.TotalItems(items =>
        {
            items.AddFor(m => m.Quantity).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
            items.AddFor(m => m.LineTotal).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
        }))
        .OnInitNewRow("function(e) { e.data.Price = 0;e.data.Quantity = 1; }")

        )
</div>