@model ERPKeeperCore.Enterprise.Models.Customers.SaleQuote

<form id="EditForm" action="/@CompanyId/Customers/SaleQuotes/@Model.Id/Update" method="post">

    <div class="grid grid-cols-3">
        <div class="border bg-gray-100 p-2 mb-2 rounded">
            <div class="mb-3 font-semibold text-lg">General</div>
            <div class="mb-2">@Html.DevExtreme().TextBoxFor(m => m.Name).Label("Name").LabelMode(EditorLabelMode.Static).Disabled(true)</div>
            <div class="mb-2">@Html.DevExtreme().TextBoxFor(m => m.No).Label("No").LabelMode(EditorLabelMode.Static)</div>

            <div class="mb-2">@Html.DevExtreme().DateBoxFor(m => m.Date).Label("TrnDate").LabelMode(EditorLabelMode.Static)</div>
            <div class="mb-2">
                @(Html.DevExtreme().SelectBoxFor(m => m.TaxCodeId)
                                .DataSource(Organization.TaxCodes.ListAll().Select(t => new { t.Id, t.Name }).ToList())
                                .Placeholder("Choose Tax Code")
                                .DisplayExpr("Name")
                                .ValueExpr("Id")
                                .Label("Tax")
                                .ShowClearButton(true)
                                .LabelMode(EditorLabelMode.Static)
                                )
            </div>

            <div class="mb-2">@Html.DevExtreme().TextBoxFor(m => m.Reference).Label("Reference").LabelMode(EditorLabelMode.Static)</div>

        </div>
        <div class="border bg-gray-100 p-2 mb-2 rounded">
            <div class="flex flex-wrap justify-between">
                <div class="">
                    <div class="mb-3 font-semibold text-lg">Customer</div>
                </div>
                <div class="">
                    <a href="/@CompanyId/Profiles/@Model.CustomerId">
                        <i class="fa-regular fa-id-badge text-xl"></i>
                    </a>
                </div>
            </div>



            <div class="mb-2">
                @Html.DevExtreme().TextBoxFor(m => m.Customer.Profile.Name).Label("Customer").LabelMode(EditorLabelMode.Static)
            </div>
            <div class="mb-2">
                @Html.DevExtreme().TextBoxFor(m => m.Customer.Profile.TaxNumber).Label("Tax").LabelMode(EditorLabelMode.Static)
            </div>
            <div class="mb-2">
                @Html.DevExtreme().CheckBoxFor(m => m.IsPriceTaxInclude).Text("TaxInclude")
            </div>

            @{
                var addresses = Model.Customer.Profile.Addresses.ToList();
            }

            @(Html.DevExtreme().SelectBoxFor(m => m.ProfileAddesssId)
                        .Name("ProfileAddesssId") // Manually set the name
                        .DataSource(addresses.Select(t => new { t.Id, t.Title }).ToList())
                        .Placeholder("Address")
                        .DisplayExpr("Title")
                        .ValueExpr("Id")
                        .Label("Address")
                        .ShowClearButton(true)
                        .LabelMode(EditorLabelMode.Static))


        </div>

        <div class="border">
            <div class=" bg-gray-100 p-2 mb-2 rounded">
                <div class="flex flex-wrap justify-between">
                    <div class="">
                        <div class="mb-3 font-semibold text-lg">Financial</div>
                    </div>
                    <div class="">
                    </div>
                </div>

                <div class="mb-2">@Html.DevExtreme().NumberBoxFor(m => m.LinesTotal).Label("LinesTotal").ReadOnly(true).LabelMode(EditorLabelMode.Static)</div>
                <div class="mb-2">@Html.DevExtreme().NumberBoxFor(m => m.Discount).Label("Discount").LabelMode(EditorLabelMode.Static)</div>
                <div class="mb-2">@Html.DevExtreme().NumberBoxFor(m => m.LinesTotalAfterDiscount).Label("AfterDiscount").ReadOnly(true).LabelMode(EditorLabelMode.Static)</div>
                <div class="mb-2">@Html.DevExtreme().NumberBoxFor(m => m.Tax).Label("Tax").ReadOnly(true).LabelMode(EditorLabelMode.Static)</div>
                <div class="mb-2">@Html.DevExtreme().NumberBoxFor(m => m.Total).Label("Total").ReadOnly(true).LabelMode(EditorLabelMode.Static)</div>


                @(Html.DevExtreme().SelectBoxFor(m => m.PaymentTermId)
                                .Name("PaymentTermId") // Manually set the name
                                .DataSource(Organization.PaymentTerms.GetAll().Select(t => new { t.Id, t.Name }).ToList())
                                .Placeholder("Payment Term")
                                .DisplayExpr("Name")
                                .ValueExpr("Id")
                                .Label("PaymentTerm")
                                .ShowClearButton(true)
                                .LabelMode(EditorLabelMode.Static))



            </div>
        </div>


        <div class="border">
            <div class=" bg-gray-100 p-2 mb-2 rounded">

                <div class="mb-2">
                    <div class="mb-3 font-semibold text-lg">Projects</div>

                    @{
                        var projects = Organization.Projects.GetActive();

                        if (Model.ProjectId != null)
                        {
                            projects.Add(Organization.Projects.Find((Guid)Model.ProjectId));
                        }

                    }

                    @(Html.DevExtreme().SelectBoxFor(m => m.ProjectId)
                                        .Name("ProjectId") // Manually set the name
                                        .DataSource(projects.Select(t => new { t.Id, t.Name }).ToList())
                                        .Placeholder("Projects")
                                        .DisplayExpr("Name")
                                        .ValueExpr("Id")
                                        .Label("Project")
                                        .ShowClearButton(true)
                                        .LabelMode(EditorLabelMode.Static))

                    @if (Model.Project != null)
                    {
                        <div>
                            <a href="/@CompanyId/Projects/@Model.ProjectId/">@Model.Project.Name</a>
                        </div>
                    }
                </div>
            </div>
        </div>



        <div class="border">
            <div class=" bg-gray-100 p-2 mb-2 rounded">
                <div class="mb-3 font-semibold text-lg">Memo</div>
                <div class="mb-2">@Html.DevExtreme().TextAreaFor(m => m.Memo).Height(150).Label("Detail").LabelMode(EditorLabelMode.Static)</div>
            </div>
        </div>
        <div class="border bg-gray-100 p-2 mb-2 rounded text-right">

            <button class="btn py-1 btn-sm" style="background-color: #5D6EAE;" type="button" onclick="document.getElementById('EditForm').submit();">
                Save
            </button>
        </div>
    </div>


</form>
