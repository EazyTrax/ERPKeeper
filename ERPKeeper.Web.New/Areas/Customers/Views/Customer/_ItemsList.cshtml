@model ERPKeeperCore.Enterprise.Models.Customers.Customer



<style>
    .dx-treelist .dx-flex > td {
        padding: 2px !important;
    }
</style>

<div id="treeListDemo" class="mb-3 border">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Customers.CustomerItem>()
            .ID("gridList")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Customers/Customers/{Model.ProfileId}/Items/All"))
            .RowAlternationEnabled(true)
            .KeyExpr("Id")
            .ShowRowLines(true)
            .ShowBorders(false)
            .GroupPanel(groupPanel => groupPanel.Visible(true))
            .Paging(paging => paging.PageSize(100))
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s => s.Enabled(true)))
            .ColumnAutoWidth(false)
            .RowDragging(rd => rd
            .AllowDropInsideItem(false)
            .AllowReordering(false)
            )
            .Columns(columns =>
            {

                columns.AddFor(m => m.Item.PartNumber)
            .Width(180)
            .CellTemplate(@<text>
        <a href="/@CompanyId/Products/Items/<%= data.ItemId %>/">
            <%= data.Item.PartNumber %>
        </a>
    </text>
        ); 
        columns.AddFor(m => m.Item.Description)
        .CellTemplate(@<text>
        <a href="/@CompanyId/Products/Items/<%= data.ItemId %>/">
            <%= data.Item.Description %>
        </a>
    </text>
        );


                columns.AddFor(m => m.AmountSale).Width(80);

                columns.AddFor(m => m.AmountSaleQuote).Width(80);
            })
        )
</div>

