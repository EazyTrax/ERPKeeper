@model ERPKeeperCore.Enterprise.Models.Customers.Customer



<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Customers.Sale>()
    .ID("gridList")
    .KeyExpr("Id")
    .DataSource(d => d.RemoteController().Key("Id")
    .LoadUrl($"/API/{CompanyId}/Customers/Customers/{Model.ProfileId}/Sales/All")
    .InsertUrl($"/API/{CompanyId}/Customers/Customers/{Model.ProfileId}/Sales/Insert")
    .UpdateUrl($"/API/{CompanyId}/Customers/Customers/{Model.ProfileId}/Sales/Update")
    .UpdateMethod("Post")
    .InsertMethod("Post")
    )
    .ShowRowLines(true)
    .ShowBorders(false)
    .Paging(paging => paging.PageSize(100))

    .AllowColumnResizing(true)
    .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
        .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))
        .StateStoring(stateStoring => stateStoring.Enabled(true).Type(StateStoringType.LocalStorage).StorageKey("Customers_Customer_Sales"))

    .ColumnAutoWidth(false)
    .Columns(columns => {
    columns.AddFor(m=>m.Date).SortOrder(SortOrder.Desc).SortIndex(1).Width(130);
                columns.AddFor(m => m.Status).AllowEditing(false).SortOrder(SortOrder.Asc).Width(100).SortIndex(2).Lookup(lookup => lookup
    .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Customers.Enums.SaleStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text}))
    .DisplayExpr("Text")
    .ValueExpr("Value")
    );

    columns.AddFor(m => m.Name).Width(130).CellTemplate(@<text><a href="/@CompanyId/Customers/Sales/<%= data.Id %>/"><%= data.Name %></a></text>);
    columns.AddFor(m => m.Reference).CellTemplate(@<text><a href="/@CompanyId/Customers/Sales/<%= data.Id %>/"><%= data.Reference %></a></text>);
    columns.AddFor(m=>m.Total).Width(130).AllowEditing(false).Format("#,##0.00");
    columns.AddFor(m=>m.Tax).Width(130).AllowEditing(false).Format("#,##0.00");
    })
    )
</div>

