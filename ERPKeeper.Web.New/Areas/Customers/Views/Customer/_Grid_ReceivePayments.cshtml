
<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Customers.ReceivePayment>()
        .ID("gridList")
        .KeyExpr("Id")
        .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Customers/Customers/{Model.Id}/ReceivePayments/All"))
        .RowAlternationEnabled(true).AllowColumnReordering(true)
        .ShowRowLines(true)
        .ShowBorders(false)
        .Paging(paging => paging.PageSize(100))
        .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
        .FilterRow(filterRow => filterRow.Visible(true))
        .ColumnAutoWidth(false)
        .ColumnChooser(columnChooser => columnChooser.Enabled(true))
        @*.AutoExpandAll(true)*@

        .Columns(columns =>
            {
                columns.AddFor(m => m.Date).SortOrder(SortOrder.Desc).SortIndex(1).Width(130);

                columns.AddFor(m => m.Status).AllowEditing(false).Width(80).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Customers.Enums.PaymentStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );

                columns.AddFor(m => m.Name)
            .Width(130)
            .Visible(false)
            .CellTemplate(@<text><a href="/@CompanyId/Customers/ReceivePayments/<%= data.Id %>/">RP:<%= data.Name %></a></text>);


                columns.AddFor(m => m.SaleId)
            .Width(130)
            .CellTemplate(@<text><a href="/@CompanyId/Customers/ReceivePayments/<%= data.Id %>/"><%= data.Sale.Name %></a></text>);



                columns.AddFor(m => m.Sale.CustomerId).Lookup(lookup => 
               lookup.DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Customers/Customers/<%= data.Sale.CustomerId %>/"><%= displayValue %></a></text>);
       

                columns.AddFor(m => m.Reference).Width(180);
                columns.AddFor(m => m.Amount).Width(130).Format("#,##0.00");
                columns.AddFor(m => m.Discount_Given_Expense_Account).Width(130).Format("#,##0.00");

                columns.AddFor(m => m.PayToAccountId).Lookup(lookup =>
            lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.PayToAccountId %>/"><%= displayValue %></a></text>);




                columns.AddFor(m => m.RetentionTypeId).Lookup(lookup =>
            lookup.DataSource(Organization.ErpCOREDBContext.RetentionTypes.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Financial/RetentionTypes/<%= data.RetentionTypeId %>/"><%= displayValue %></a></text>);









                columns.AddFor(m => m.IsPosted).AllowEditing(false).Width(30).HeaderCellTemplate(@<text> </text>).CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);


            })
        )
</div>

