@model ERPKeeper.Node.Models.Estimations.SaleQuote

<div id="treeListDemo" class="mb-3">

    @(Html.DevExtreme().DataGrid<ERPKeeper.Node.Models.Estimations.QuoteItem>()
    .ID("gridList")
    .KeyExpr("Uid")
    .ShowRowLines(true)
    .ShowBorders(false)
    .Paging(paging => paging.PageSize(100))
    .HeaderFilter(headerFilter => headerFilter.Visible(true).AllowSearch(true))
    .Width("100%")
    .ColumnAutoWidth(false)
    .DataSource(d =>
    d.RemoteController()
    .Key("Uid")
    .LoadUrl($"/API/{CompanyId}/Customers/Estimates/{Model.Uid}/Products/All")
    .InsertUrl($"/API/{CompanyId}/Customers/Estimates/{Model.Uid}/Products/Insert")
    .UpdateUrl($"/API/{CompanyId}/Customers/Estimates/{Model.Uid}/Products/Update")
    .UpdateMethod("Post")
    .DeleteUrl($"/API/{CompanyId}/Customers/Estimates/{Model.Uid}/Products/Delete")
    .DeleteMethod("Post")
    )

    .KeyExpr("Uid")
    .Editing(editing => {
    editing.Mode(GridEditMode.Popup);
    editing.AllowAdding(Model.Status ==  ERPKeeper.Node.Models.Estimations.Enums.QuoteStatus.Quote);
    editing.AllowDeleting(Model.Status ==  ERPKeeper.Node.Models.Estimations.Enums.QuoteStatus.Quote);
    editing.AllowUpdating(Model.Status ==  ERPKeeper.Node.Models.Estimations.Enums.QuoteStatus.Quote);
    editing.UseIcons(true);
    editing.Form(f=>f.ColCount(1).Width(500));
    })

    .Columns(columns => {

    columns.AddFor(m=>m.ItemGuid).Width(150)
    .CellTemplate(@<text><a href="/@CompanyId/Products/Items/<%= data.ItemGuid %>/"><%= displayValue %></a></text>)
    .Lookup(lookup => lookup
    .DataSource(Organization.ErpNodeDBContext.Items.Select(t => new { t.Uid, t.PartNumber }).ToList())
    .DisplayExpr("PartNumber")
    .ValueExpr("Uid")
    );

    columns.AddFor(m=>m.ItemBrandId)
    .Width(150)
    .CellTemplate(@<text><a href="/@CompanyId/Products/Brands/<%= data.ItemGuid %>/"><%= displayValue %></a></text>)
    .Lookup(lookup => lookup
    .DataSource(Organization.ErpNodeDBContext.Brands.Select(t => new { t.Uid, t.Name }).ToList())
    .DisplayExpr("Name")
    .ValueExpr("Uid")
    );


    columns.AddFor(m=>m.ItemDescription).FormItem(i => i.Editor(e => e.TextArea().MinHeight(150)));
    columns.AddFor(m=>m.UnitPrice).Width(100).Format(Format.FixedPoint);
    columns.AddFor(m=>m.Amount).Width(100).Format(Format.FixedPoint);
    columns.AddFor(m=>m.LineTotal).Width(100).Format(Format.FixedPoint).FormItem(i=>i.Visible(false));
    })
    .OnInitNewRow("function(e) { e.data.UnitPrice = 0;e.data.Amount = 1; }")
    )
</div>