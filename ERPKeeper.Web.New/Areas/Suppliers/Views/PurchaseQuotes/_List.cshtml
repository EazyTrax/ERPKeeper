


<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Suppliers.PurchaseQuote>()
            .ID("gridList")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Suppliers/PurchaseQuotes/All")
            .UpdateUrl($"/API/{CompanyId}/Suppliers/PurchaseQuotes/Update")
            .UpdateMethod("Post")
            )
            .Editing(editing => editing.Mode(GridEditMode.Row).UseIcons(true))

            .RowAlternationEnabled(true)
            .KeyExpr("Id")
            .ShowRowLines(false)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s => s.Enabled(true)))

            .ColumnAutoWidth(false)
            .ColumnChooser(columnChooser => columnChooser.Enabled(true))
            .Columns(columns =>
            {
                columns.AddFor(m => m.Date)
            .SortOrder(SortOrder.Desc)
            .SortIndex(1)
            .Width(130);

                columns.AddFor(m => m.Status)
            .Width(80)
            .Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Suppliers.Enums.PurchaseQuoteStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );

                columns.AddFor(m => m.Name)
            .Width(150)
            .CellTemplate(@<text><a href="/@CompanyId/Suppliers/PurchaseQuotes/<%= data.Id %>/">N:<%= data.Name %></a></text>);


                columns.AddFor(m => m.SupplierId)
            .Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.Suppliers.Select(i => new { Value = i.Id, Text = i.Profile.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .CellTemplate(@<text><a href="/@CompanyId/Suppliers/Suppliers/<%= data.SupplierId %>/"><%= displayValue %></a></text>);


                columns.Add().DataField("Reference").Width(180);
                columns.Add().DataField("LinesTotal").Width(130).Format("#,##0.00");
                columns.Add().DataField("Total").Width(130).Format("#,##0.00");

                columns.AddFor(m => m.TaxCodeId)
            .Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.TaxCodes.Select(i => new { Value = i.Id, Text = i.Name }))
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .Width(150)
            .HeaderCellTemplate(@<text>TaxCode</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Taxes/TaxCodes/<%= data.TaxCodeId %>/"><%= displayValue %></a></text>);



            })
        .Summary(s =>
        s.TotalItems(items =>
        {
            items.AddFor(m => m.LinesTotal).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
            items.AddFor(m => m.Total).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
        }))
        .OnInitNewRow("onInitNewRow")
        )
</div>

<script>

    function onInitNewRow(e) {
        const today = new Date();
        e.data.Date = today;
        e.data.Status = 0;
    }
</script>