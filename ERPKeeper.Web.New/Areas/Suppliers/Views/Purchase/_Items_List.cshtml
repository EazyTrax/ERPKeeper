@model ERPKeeperCore.Enterprise.Models.Suppliers.Purchase

<div class="p-2 text-right">
    <a href="/@CompanyId/Suppliers/Purchases/@Model.Id/Items/Avaliable"><i class="fa-solid fa-circle-plus"></i> Item</a>
</div>


<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Suppliers.PurchaseItem>()
    .ID("gridList")
    .KeyExpr("Id")
    .ShowRowLines(true)
    .ShowBorders(false)
    .Paging(paging => paging.PageSize(100))
    .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
    .Width("100%")
    .WordWrapEnabled(true)
    .ColumnAutoWidth(false)
    .DataSource(d =>
    d.RemoteController()
    .Key("Id")
    .LoadUrl($"/API/{CompanyId}/Suppliers/Purchases/{Model.Id}/Items/All")
    .InsertUrl($"/API/{CompanyId}/Suppliers/Purchases/{Model.Id}/Items/Insert")
    .UpdateUrl($"/API/{CompanyId}/Suppliers/Purchases/{Model.Id}/Items/Update")
    .UpdateMethod("Post")
    .DeleteUrl($"/API/{CompanyId}/Suppliers/Purchases/{Model.Id}/Items/Delete")
    .DeleteMethod("Post")
    )
    .Editing(editing => editing.AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))

    .KeyExpr("Id")
    .WordWrapEnabled(true)
            .ColumnChooser(c => c.Enabled(true))
    .Columns(columns => {

                columns.AddFor(m => m.Order).SortOrder(SortOrder.Asc).SortIndex(0).Width(40);


                columns.AddFor(m => m.PartNumber).Width(150)
            .CellTemplate(@<text><a target="_blank" href="/@CompanyId/Products/Items/<%= data.ItemId %>/"><%= data.PartNumber %></a></text>)
        .FormItem(i => i.Editor(e => e.TextArea().MinHeight(150)));

   


    columns.AddFor(m=>m.Description).FormItem(i => i.Editor(e => e.TextArea().MinHeight(150)));
    columns.AddFor(m=>m.Price).Width(130).Format("#,##0.00");

                columns.AddFor(m => m.DiscountPercent).Width(130).Format("#,##0.00");
                columns.AddFor(m => m.PriceAfterDiscount).Width(130).Format("#,##0.00");

    columns.AddFor(m=>m.Quantity).Width(130).Format("#,##0.00");
    columns.AddFor(m=>m.LineTotal).Width(130).Format("#,##0.00").FormItem(i=>i.Visible(false));
    columns.AddFor(m=>m.Description).Visible(false).FormItem(i => i.Editor(e => e.TextArea().MinHeight(150)));
    })
    .OnInitNewRow("function(e) { e.data.PurchasePrice = 0;e.data.Amount = 1; }")

        .Summary(s =>
        s.TotalItems(items =>
        {
            items.AddFor(m => m.Quantity).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
            items.AddFor(m => m.LineTotal).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat(",##0");
        }))
    )
</div>