


<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Suppliers.Purchase>()
    .ID("gridList")
    .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Suppliers/Purchases/All")
        @*.InsertUrl($"/API/{CompanyId}/Customers/Customers/Insert")
            .UpdateUrl($"/API/{CompanyId}/Customers/Customers/Update")
            .UpdateMethod("Post")
            .DeleteUrl($"/API/{CompanyId}/Customers/Customers/Delete")
            .DeleteMethod("Post")*@
    )
        .RowAlternationEnabled(true)
    .KeyExpr("Id")
    
        
    .ShowRowLines(false)
    .ShowBorders(false)
    .Paging(paging => paging.PageSize(100))

    //.SearchPanel(searchPanel => searchPanel.Visible(true))
    .HeaderFilter(headerFilter => headerFilter.Visible(true))

    .ColumnAutoWidth(false)
        @*.AutoExpandAll(true)*@
    .RowDragging(rd => rd
    .AllowDropInsideItem(false)
    .AllowReordering(false)
        @*.OnDragChange("onDragChange")
            .OnDragEnd("onDragEnd")
            .ShowDragIcons(false)*@
    )
    .Columns(columns => {




    columns.AddFor(m=>m.Date).Format("dd-MM-yyyy").SortOrder(SortOrder.Desc).SortIndex(1).Width(130);
   
    columns.AddFor(m=>m.Status).Width(80).SortOrder(SortOrder.Desc).SortIndex(2).Lookup(lookup => lookup
    .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Customers.Enums.SaleStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text}))
    .DisplayExpr("Text")
    .ValueExpr("Value")
    );

    columns.Add().DataField("Name")
    .Width(130)
    .CellTemplate(@<text>
            <a href="/@CompanyId/Suppliers/Purchases/<%= data.Id %>/">
                <%= data.Name %>
            </a>
        </text>);

    columns.Add().DataField("ProfileName")
    .Width(300)
    .CellTemplate(@<text>
            <a href="/@CompanyId/Suppliers/Suppliers/<%= data.ProfileUid %>/">
                <%= data.ProfileName %>
            </a>
        </text>);

    columns.Add().DataField("Reference");
        columns.Add().DataField("LinesTotal").Format(Format.FixedPoint);
    columns.Add().DataField("Total").Format(Format.FixedPoint);
                columns.AddFor(m => m.IsPosted).AllowEditing(false).Width(30).HeaderCellTemplate(@<text> </text>).CellTemplate(@<text><i class="fas fa-fingerprint text-color-<%= data.PostStatus %>"></i></text>);
    })
    )
</div>

