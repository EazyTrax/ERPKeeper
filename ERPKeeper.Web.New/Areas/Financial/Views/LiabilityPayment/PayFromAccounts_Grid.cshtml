@model ERPKeeperCore.Enterprise.Models.Financial.LiabilityPayment

<div class="mb-2 border-top">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Financial.LiabilityPaymentPayFromAccount>()
            .ID("LedgerList")
            .KeyExpr("Id")
            .DataSource(d => d.RemoteController()
            .Key("Id")
            .LoadUrl($"/api/{CompanyId}/Financial/LiabilityPayments/{Model.Id}/PayFromAccounts/All")
            .InsertUrl($"/api/{CompanyId}/Financial/LiabilityPayments/{Model.Id}/PayFromAccounts/Insert")
            .UpdateUrl($"/api/{CompanyId}/Financial/LiabilityPayments/{Model.Id}/PayFromAccounts/Update")
            .UpdateMethod("Post"))
            .AllowColumnReordering(true)
            .RowAlternationEnabled(true).AllowColumnReordering(true).ShowRowLines(true).HoverStateEnabled(true)
            .ShowColumnLines(true)
            .ShowBorders(false)
            .ColumnAutoWidth(false)
            .Width("100%")
            .Paging(pagging => pagging.PageSize(100))
            .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))

            .Columns(columns =>
            {
                columns.AddFor(m => m.AccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .Width(300).HeaderCellTemplate(@<text>Account</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.AccountId %>/"><%= displayValue %></a></text>);


                columns.AddFor(m => m.Account.Type)
                    .HeaderCellTemplate("Type")
                    .AllowEditing(false)
                    .Width(130).SortOrder(SortOrder.Asc).SortIndex(1).Lookup(lookup => lookup
                    .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Accounting.Enums.AccountTypes>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
                    .DisplayExpr("Text")
                    .ValueExpr("Value")
                    );


                columns.AddFor(m => m.Amount).Width(130).Format(",##0.00");
            })
        .Summary(s => s.TotalItems(items =>
        {
            items.AddFor(m => m.Amount).SummaryType(SummaryType.Sum)
            .DisplayFormat("{0}")
            .ValueFormat(f =>
            {
                f.Precision(2);
                f.Type(Format.FixedPoint);
            });
        }))
        )
</div>