
<div class="border p-2 mb-2">
    @Model.SupplierPayments.Count SupplierPayments
</div>

<div id="treeListDemo" class="mb-3 border">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Suppliers.SupplierPayment>()
        .ID("grid_SupplierPayments_List")
        .KeyExpr("Id")
        .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Financial/RetentionGroups/{Model.Id}/SupplierPayments/All")
        @*  .InsertUrl($"/API/{CompanyId}/Suppliers/Suppliers/Insert")
            .UpdateUrl($"/API/{CompanyId}/Suppliers/Suppliers/Update")
            .UpdateMethod("Post")
            .DeleteUrl($"/API/{CompanyId}/Suppliers/Suppliers/Delete")
            .DeleteMethod("Post")*@
        )
        .RowAlternationEnabled(true).AllowColumnReordering(true)
        .ShowRowLines(true)
        .ShowBorders(false)
        .Paging(paging => paging.PageSize(100))
        .AllowColumnResizing(true).AllowColumnReordering(true)
        .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
           .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).UseIcons(true))
         
        .ColumnAutoWidth(false)
            .StateStoring(s => s.Enabled(true).Type(StateStoringType.LocalStorage).StorageKey("SupplierPayments" + CompanyId.ToString()))

            .ColumnChooser(columnChooser => columnChooser.Enabled(true))
        
            .Columns(columns =>
            {

                columns.AddFor(m => m.Date).SortOrder(SortOrder.Desc).SortIndex(1).Width(130);

         
                columns.AddFor(m => m.Name).Width(50)
            .CellTemplate(@<text><a href="/@CompanyId/Suppliers/SupplierPayments/<%= data.Id %>/">SP</a></text>);


                columns.AddFor(m => m.PurchaseId)
            .Width(130)
            .CellTemplate(@<text><a href="/@CompanyId/Suppliers/Purchases/<%= data.PurchaseId %>/"><%= data.Purchase.Name %></a></text>);

                columns.AddFor(m => m.Purchase.SupplierId).Lookup(lookup =>
            lookup.DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Id, Text = i.Name }).ToList())
            .DisplayExpr("Text")
            .ValueExpr("Value"))
            .AllowEditing(false)
            .CellTemplate(@<text><a href="/@CompanyId/Suppliers/Suppliers/<%= data.Purchase.SupplierId %>/"><%= displayValue %></a></text>);

          




                columns.AddFor(m => m.AmountRetention).HeaderCellTemplate("Retention").Width(130).Format("#,##0.00");





                columns.AddFor(m => m.Reference).Width(180);

                columns.AddFor(m => m.Amount).Width(130).Format("#,##0.00");
                columns.AddFor(m => m.IsPosted).AllowEditing(false).Width(30).HeaderCellTemplate(@<text> </text>).CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);
            })
        .Summary(s =>
        s.TotalItems(items =>
        {

            items.AddFor(m => m.Amount).SummaryType(SummaryType.Sum).DisplayFormat("{0}").ValueFormat("#,##0.00");
        }))
        )
</div>

