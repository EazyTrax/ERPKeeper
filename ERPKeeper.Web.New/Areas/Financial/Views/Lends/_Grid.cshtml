
<div id="treeListDemo" class="mb-3 border">
    @(
            Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Financial.Lend>()
            .ID("gridList")
            .KeyExpr("Id")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/{CompanyId}/Financial/Lends/All")
            .InsertUrl($"/API/{CompanyId}/Financial/Lends/Insert")
            .InsertMethod("Post")
            .UpdateUrl($"/API/{CompanyId}/Financial/Lends/Update")
            .UpdateMethod("Post")
            )
            .RowAlternationEnabled(true).AllowColumnReordering(true)
            .ShowRowLines(false)
            .ShowBorders(false)
            .Paging(paging => paging.PageSize(100))
            .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
            .ColumnAutoWidth(false)
            .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))

            .Columns(columns =>
            {


                columns.AddFor(m => m.Date).Alignment(HorizontalAlignment.Right).SortOrder(SortOrder.Desc).SortIndex(1).Width(130);

                columns.AddFor(m => m.Status).AllowEditing(false).Width(80).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Financial.Enums.LendStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );

                columns.AddFor(m => m.Name).Width(130)
            .CellTemplate(@<text><a href="/@CompanyId/Financial/Lends/<%= data.Id %>/"><%= data.Name %></a></text>);
                columns.AddFor(m => m.Reference).Width(180);


                columns.AddFor(m => m.Lending_AssetAccountId)

            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .Width(150)
            .HeaderCellTemplate(@<text>Dr.Lending Acc</text>)
            .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.LendingAccountId %>/"><%= displayValue %></a></text>);




                columns.AddFor(m => m.PayFrom_AssetAccountId)

            .Lookup(lookup => lookup.DataSource(Organization.ChartOfAccount.Assets.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .Width(150)
            .HeaderCellTemplate(@<text>Cr.PayingFrom</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Accounting/Accounts/<%= data.PayingAccountId %>/"><%= displayValue %></a></text>);






                columns.AddFor(m => m.AmountLend)
            .HeaderCellTemplate("Amount")
            .Width(130)
            .Format("#,##0.00");


  

                columns.AddFor(m => m.AmountRemain)
            .HeaderCellTemplate("Remain")
            .Width(130)
            .Format("#,##0.00");



                columns.AddFor(m => m.IsPosted)
            .AllowEditing(false).Width(30)
            .HeaderCellTemplate(@<text> </text>)
        .CellTemplate(@<text><i class="fas fa-fingerprint text-<%= data.IsPosted %>"></i></text>);




            })
        )
</div>

