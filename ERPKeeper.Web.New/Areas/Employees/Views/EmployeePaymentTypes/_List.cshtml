

<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Employees.EmployeePaymentType>()
    .ID("gridList")
    .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Employees/EmployeePaymentTypes/All")
        .InsertUrl($"/API/{CompanyId}/Employees/EmployeePaymentTypes/Insert")
        .UpdateUrl($"/API/{CompanyId}/Employees/EmployeePaymentTypes/Update")
    .UpdateMethod("Post")
        .DeleteUrl($"/API/{CompanyId}/Employees/EmployeePaymentTypes/Delete")
    .DeleteMethod("Post")
    )
    .KeyExpr("Id")
    .RowAlternationEnabled(true).AllowColumnReordering(true)
    .ShowRowLines(true)
    .ShowBorders(false)
    .Width("100%")
    .Paging(paging => paging.PageSize(100))
    .Editing(editing => editing.Mode(GridEditMode.Row).AllowAdding(true).AllowUpdating(true).AllowUpdating(true)
    )

    .AllowColumnResizing(true).AllowColumnReordering(true)
    .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
    .FilterRow(filterRow => filterRow
    .Visible(true)
    .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .ColumnAutoWidth(false)
        @*.AutoExpandAll(true)*@
    .RowDragging(rd => rd
    .AllowDropInsideItem(false)
    .AllowReordering(false)
        @*.OnDragChange("onDragChange")
            .OnDragEnd("onDragEnd")
            .ShowDragIcons(false)*@
    )
    .Columns(columns =>
    {
        @* columns.AddFor(m=>m.Status).Width(130).SortOrder(SortOrder.Asc).SortIndex(2).Lookup(lookup => lookup
        .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Positions.Positionstatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text}))
        .DisplayExpr("Text")
        .ValueExpr("Value")
    );*@

    columns.AddFor(m=>m.Name)
    .CellTemplate(@<text><a href="/@CompanyId/Employees/EmployeePaymentTypes/<%= data.Id %>/"><%= displayValue %></a></text>);


    columns.AddFor(m=>m.Description);
            columns.AddFor(m => m.Total).Format("#,##0.00");


            columns.AddFor(m => m.ExpenseAccountId).Width(250)
        .Lookup(lookup => lookup
        .DataSource(Organization.ErpCOREDBContext.Accounts.Select(i => new { Value = i.Id, Text = i.Name }).ToList())
        .DisplayExpr("Text")
        .ValueExpr("Value"))
        .HeaderCellTemplate(@<text>Expense Acc</text>)
        .CellTemplate(@<text><a href="/@CompanyId/Accounts/Accounts/<%= data.AccountUid %>/"><%= displayValue %></a></text>);



            columns.AddFor(m => m.PayDirection)
            .HeaderCellTemplate("Type")

            .Width(120)
            .SortOrder(SortOrder.Asc)
            .SortIndex(1)
            .Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Employees.Enums.PayDirection>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }).ToList())
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );



    })
    )
</div>


