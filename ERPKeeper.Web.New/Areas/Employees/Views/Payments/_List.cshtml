

<div id="treeListDemo" class="mb-3">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Employees.EmployeePayment>()
    .ID("gridList")
    .DataSource(d => d.RemoteController().Key("Uid")
    .LoadUrl($"/API/Employment/Payments/All")
    .InsertUrl($"/API/Employment/Payments/Insert")
    .UpdateUrl($"/API/Employment/Payments/Update")
    .UpdateMethod("Post")
    .DeleteUrl($"/API/Employment/Payments/Delete")
    .DeleteMethod("Post")
    )
    .KeyExpr("Uid")
    .RowAlternationEnabled(true)
    .ShowRowLines(true)
    .ShowBorders(false)
    .Width("100%")
    .Paging(paging => paging.PageSize(100))
    .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(true)
    )

    //.SearchPanel(searchPanel => searchPanel.Visible(true))
    .HeaderFilter(headerFilter => headerFilter.Visible(true).AllowSearch(true))
    .FilterRow(filterRow => filterRow
    .Visible(true)
    .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .ColumnAutoWidth(false)
        @*.AutoExpandAll(true)*@
    .RowDragging(rd => rd
    .AllowDropInsideItem(false)
    .AllowReordering(false)
        @*.OnDragChange("onDragChange")
            .OnDragEnd("onDragEnd")
            .ShowDragIcons(false)*@
    )
    .Columns(columns =>
    {

    columns.AddFor(m=>m.Name).CellTemplate(@<text><a href="/@CompanyId/Employees/Payments/<%= data.Uid %>/"><%= displayValue %></a></text>);


    columns.AddFor(m=>m.EmployeePaymentPeriodUid).Width(100)
    .Lookup(lookup => lookup
    .DataSource(Organization.ErpCOREDBContext.EmployeePaymentPeriods.Select(i => new { Value = i.Uid, Name = i.Name}))
    .DisplayExpr("Name")
    .ValueExpr("Value"))
    .AllowEditing(false)
    .CalculateSortValue("Name")
    .SortIndex(1)
    .HeaderCellTemplate(@<text>Period</text>)
    .CellTemplate(@<text><a href="/@CompanyId/Employees/PaymentPeriods/<%= data.EmployeePaymentPeriodUid %>/"><%= displayValue %></a></text>);

    columns.AddFor(m=>m.EmployeeUid).Width(150)
    .Lookup(lookup => lookup
    .DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Uid, Text = i.TaxNumber}))
    .DisplayExpr("Text")
    .ValueExpr("Value"))
    .AllowEditing(false)
    .HeaderCellTemplate(@<text>TAX Id</text>)
    .CellTemplate(@<text><a href="/@CompanyId/Employees/Employees/<%= data.EmployeeUid %>/"><%= displayValue %></a></text>);

    columns.AddFor(m=>m.EmployeeUid).Width(250)
    .Lookup(lookup => lookup
    .DataSource(Organization.ErpCOREDBContext.Profiles.Select(i => new { Value = i.Uid, Text = i.Name}))
    .DisplayExpr("Text")
    .ValueExpr("Value"))
    .AllowEditing(false)
    .HeaderCellTemplate(@<text>Name</text>)
    .CellTemplate(@<text><a href="/@CompanyId/Employees/Employees/<%= data.EmployeeUid %>/"><%= displayValue %></a></text>);

    columns.AddFor(m=>m.TotalEarning).Format(Format.FixedPoint).HeaderCellTemplate(@<text>Earning</text>);
    columns.AddFor(m=>m.TotalDeduction).Format(Format.FixedPoint).HeaderCellTemplate(@<text>Deduction</text>);
    })

    )
</div>


