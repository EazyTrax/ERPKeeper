@model ERPKeeperCore.Enterprise.Models.Items.Item

@using Microsoft.EntityFrameworkCore;


@{
    var organizationUntrack = new ERPKeeperCore.Enterprise.EnterpriseRepo(CompanyId, false);
    var item = organizationUntrack
    .ErpCOREDBContext
    .Items
    .AsNoTracking()
    .FirstOrDefault(a => a.Id == Model.Id);
}


<div class="mb-3 bg-gray-200 p-2 border">
    <form id="EditForm" method="post" action="/@CompanyId/Products/Items/@Model.Id/Update">

        @(Html.DevExtreme().Form<ERPKeeperCore.Enterprise.Models.Items.Item>()
                .ID("form_0")
                .FormData(item)
                .LabelMode(FormLabelMode.Static)
                .LabelLocation(FormLabelLocation.Left)
                .MinColWidth(300)
                .ReadOnly(false)
                .ShowColonAfterLabel(true)
                .ColCount(2)
                .Items(items =>
                {
                    items.AddSimpleFor(m => m.PartNumber);
                    items.AddSimpleFor(m => m.UPC);


                    items.AddSimpleFor(m => m.ItemType).Editor(e => e.SelectBox()
                .SearchEnabled(true)
                .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Items.Enums.ItemTypes>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
                .DisplayExpr("Text").ValueExpr("Value"));

                    items.AddSimpleFor(m => m.BrandId)
                .Editor(e => e.SelectBox()
                .SearchEnabled(true)
                .DataSource(Organization.ErpCOREDBContext.Brands.Select(t => new { t.Id, t.Name }).ToList())
                .DisplayExpr("Name").ValueExpr("Id"));

                    items.AddSimpleFor(m => m.Status).Editor(e => e.SelectBox()
                .SearchEnabled(true)
                .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Items.Enums.ItemStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
                .DisplayExpr("Text").ValueExpr("Value"));

                    items.AddSimpleFor(m => m.Description).Editor(e => e.TextArea().MinHeight(100));
                    items.AddSimpleFor(m => m.Specification).Editor(e => e.TextArea().MinHeight(200));
                    items.AddSimpleFor(m => m.SalePrice).Editor(e => e.NumberBox());
                    items.AddSimpleFor(m => m.IncomeAccountId)
                .Editor(e => e.SelectBox()
                .SearchEnabled(true)
                .DataSource(Organization.ChartOfAccount.IncomeAccounts.Select(t => new { t.Id, t.Name }).ToList())
                .DisplayExpr("Name").ValueExpr("Id"));

                    items.AddSimpleFor(m => m.PurchaseAccountId)
                .Editor(e => e.SelectBox()
                .SearchEnabled(true)
                .DataSource(Organization.ChartOfAccount.All().OrderBy(m => m.Name).Select(t => new { t.Type, t.Id, t.Name }).ToList())
                .DataSourceOptions(o => o.Group("Type"))
                .Grouped(true)
                .GroupTemplate(@<text><div class="custom-icon"><span class="dx-icon-box icon"></span><%- key %></div></text>)
            .DisplayExpr("Name")
            .ValueExpr("Id"));
                })
            )
    </form>
</div>