
<div id="treeListDemo" class="mb-3 border">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Items.Item>()
    .ID("gridList")
    .DataSource(Organization.Items
    .GetAll()
    .Where(items => items.ItemType == ERPKeeperCore.Enterprise.Models.Items.Enums.ItemTypes.Inventory)
    .Select(i=> new{
    i.Id ,
    i.PartNumber,
    i.Description ,
    i.SalePrice ,
    i.ItemType ,
    i.BrandId,
    i.BrandName,
    i.GroupItemId,
    i.PurchaseAmount,
    i.AmountOnHand,
    i.SoldAmount,
    i.AmountOnPurchaseOrder,
    i.AmountOnQuotation,
    i.AmountOnSaleOrder,
    })


        @*   d => d.RemoteController().Key("Id")
            .LoadUrl($"/API/Enterprise/{enterpriseId}/AssetTypes/All")
            .InsertUrl($"/API/Enterprise/{enterpriseId}/AssetTypes/Insert")
            .UpdateUrl($"/API/Enterprise/{enterpriseId}/AssetTypes/Update")
            .UpdateMethod("Post")
            .DeleteUrl($"/API/Enterprise/{enterpriseId}/AssetTypes/Delete")
            .DeleteMethod("Post")*@

    )
    .KeyExpr("Id")
    .ShowRowLines(true)
    .ShowBorders(false)
    .AllowColumnResizing(false).AllowColumnReordering(true)
    .Paging(paging => paging.Enabled(true).PageSize(500))
    .AllowColumnResizing(true).AllowColumnReordering(true)
    .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s=>s.Enabled(true)))
    .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
    .ColumnAutoWidth(true)
        @*.AutoExpandAll(true)*@
    .RowDragging(rd => rd
    .AllowDropInsideItem(false)
    .AllowReordering(false)
        @*.OnDragChange("onDragChange")
            .OnDragEnd("onDragEnd")
            .ShowDragIcons(false)*@
    )
    .StateStoring(s => s
        .Enabled(true)
        .Type(StateStoringType.LocalStorage)
        .StorageKey("Customers_Inventory")
    )
    .Width("100%")
    .RowAlternationEnabled(true).AllowColumnReordering(true)
    .Columns(columns => {


                columns.AddFor(m => m.BrandId).Width(150)
            .CellTemplate(@<text><a href="/@CompanyId/Products/Brands/<%= data.BrandGuid %>/"><%= displayValue %></a></text>)
        .HeaderCellTemplate(@<text>Brand</text>)
            .Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.Brands.Select(t => new { t.Id, t.Name }).ToList())
            .DisplayExpr("Name")
            .ValueExpr("Id")
            );

                columns.Add().DataField("PartNumber")
            .SortOrder(SortOrder.Asc)
            .SortIndex(1)
            .Width(150)
            .CellTemplate(@<text>
        <a href="/@CompanyId/Products/Items/<%= data.Id %>/">
            <span ><%= data.PartNumber %></span>
        </a>
    </text>);

    columns.AddFor(m => m.Description).MinWidth(250)
    .CellTemplate(@<text>
            <a href="/@CompanyId/Products/Items/<%= data.Id %>/">
                <%= data.Description %>
            </a>
        </text>);

                columns.Add().DataField("SalePrice").Width(130).Format("#,##0.00").HeaderCellTemplate(@<text>Price</text>);
                //columns.AddFor(m=>m.AmountPurchase).Width(60).HeaderCellTemplate(@<text>PU</text>);
                //columns.AddFor(m => m.AmountSold).Width(60).HeaderCellTemplate(@<text>SL</text>);
                columns.AddFor(m => m.AmountOnHand).Width(100).HeaderCellTemplate(@<text>Stock</text>);
                columns.AddFor(m => m.AmountOnQuotation).Width(100).HeaderCellTemplate(@<text>Quote</text>);
                columns.AddFor(m => m.AmountOnSaleOrder).Width(100).HeaderCellTemplate(@<text>Order</text>);
                columns.AddFor(m => m.AmountOnPurchaseOrder).Width(100).HeaderCellTemplate(@<text>Purchase</text>);
    })
    )
</div>


