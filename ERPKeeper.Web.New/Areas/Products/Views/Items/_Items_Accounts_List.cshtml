
<style>
    .dx-treelist .dx-row > td {
        padding: 2px !important;
    }
</style>

<div id="treeListDemo" class="mb-3 border">
    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Items.Item>()
            .ID("gridList")
            .DataSource(d => d.RemoteController().Key("Id")
            .LoadUrl($"/api/{CompanyId}/Products/Items/All")
            .InsertUrl($"/api/{CompanyId}/Products/Items/Insert")
            .UpdateUrl($"/api/{CompanyId}/Products/Items/Update")
            .UpdateMethod("Post"))
            .ShowRowLines(true)
            .ShowBorders(false)
            .Editing(editing => editing.Mode(GridEditMode.Form).AllowUpdating(true).AllowAdding(true))
            .StateStoring(s => s.Enabled(true).Type(StateStoringType.LocalStorage).StorageKey("Products"))
            .AllowColumnResizing(true)
            .AllowColumnReordering(true)
            .Paging(paging => paging.PageSize(100))
            .FilterRow(fp => fp.Visible(true))
            .GroupPanel(Panel => Panel.Visible(true))
            .HeaderFilter(headerFilter => headerFilter.Visible(true))
            .ColumnChooser(Panel => Panel.Enabled(true))
            .ColumnAutoWidth(false)
            .RowAlternationEnabled(true)
            .ColumnChooser(m => m.Enabled(true))
            .Columns(columns =>
            {
                columns.AddFor(m => m.BrandId).Width(150)
            .CellTemplate(@<text><a href="/@CompanyId/Products/Brands/<%= data.BrandGuid %>/"><%= displayValue %></a></text>)
        .HeaderCellTemplate(@<text>Brand</text>)
            .Lookup(lookup => lookup
            .DataSource(Organization.ErpCOREDBContext.Brands.Select(t => new { t.Id, t.Name }).ToList())
            .DisplayExpr("Name")
            .ValueExpr("Id")
            );

                columns.Add().DataField("PartNumber")
            .SortOrder(SortOrder.Asc)
            .SortIndex(1)
            .Width(200)
            .CellTemplate(@<text>
        <a href="/@CompanyId/Products/Items/<%= data.Id %>/">
            <span ><%= data.PartNumber %></span>
        </a>
    </text>);
                columns.AddFor(m => m.Description);

                columns.AddFor(m => m.ItemType).Width(130).SortOrder(SortOrder.Asc).SortIndex(2).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Items.Enums.ItemTypes>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );


                columns.AddFor(m => m.PurchaseAccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .MinWidth(250)
            .HeaderCellTemplate(@<text>Purchase Acc (DR)</text>);


                columns.AddFor(m => m.IncomeAccountId)
            .Lookup(lookup => lookup.DataSource(Organization.ErpCOREDBContext.Accounts.Select(t => new { t.Id, t.Name }).OrderBy(t => t.Name).ToList()).DisplayExpr("Name").ValueExpr("Id"))
            .MinWidth(250)
            .HeaderCellTemplate(@<text>Income Acc (CR)</text>);

            })
        )
</div>


