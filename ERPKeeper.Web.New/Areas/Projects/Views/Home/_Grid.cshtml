
<div id="treeListDemo" class="mb-3 border">

    @(Html.DevExtreme().DataGrid<ERPKeeperCore.Enterprise.Models.Projects.Project>()
        .ID("gridList")
        .DataSource(d => d.RemoteController().Key("Id")
        .LoadUrl($"/API/{CompanyId}/Projects/All")
        .InsertUrl($"/API/{CompanyId}/Projects/Insert")
        .UpdateUrl($"/API/{CompanyId}/Projects/Update")
        .UpdateMethod("Post")
        .DeleteUrl($"/API/{CompanyId}/Projects/Delete")
        .DeleteMethod("Post")
        )
        .KeyExpr("Id")
        .Width("100%")
        .RowAlternationEnabled(true)
        .Editing(editing => editing.Mode(GridEditMode.Row).AllowUpdating(IsOnEditMode).AllowAdding(IsOnEditMode).UseIcons(true))
        .StateStoring(stateStoring => stateStoring.Enabled(true).Type(StateStoringType.LocalStorage).StorageKey("SaleQuotes"))

        .ShowRowLines(true)
        .ShowBorders(false)
        .Paging(paging => paging.PageSize(100))

        .AllowColumnResizing(true)
        .HeaderFilter(headerFilter => headerFilter.Visible(true).Search(s => s.Enabled(true)))

        .ColumnAutoWidth(false)
        @*.AutoExpandAll(true)*@
        .RowDragging(rd => rd
        .AllowDropInsideItem(false)
        .AllowReordering(false)
        @*.OnDragChange("onDragChange")
    .OnDragEnd("onDragEnd")
    .ShowDragIcons(false)*@
        )
            .Columns(columns =>
            {
                columns.AddFor(m => m.Status).Width(100).SortOrder(SortOrder.Asc).SortIndex(2).Lookup(lookup => lookup
            .DataSource(Html.GetEnumSelectList<ERPKeeperCore.Enterprise.Models.Projects.Enums.ProjectStatus>().Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .ValueExpr("Value")
            );


                columns.AddFor(m => m.Name).MinWidth(300)

            .SortOrder(SortOrder.Asc)
            .SortIndex(1)
            .CellTemplate(@<text><a href="/@CompanyId/Projects/<%= data.Id %>/"><%= data.Name %></a></text>);


                columns.AddFor(m => m.StartDate).Width(120);
                columns.AddFor(m => m.EndDate).Width(120);



            })
        .OnInitNewRow("onInitNewRow")
        )
</div>

<script>


    function onInitNewRow(e) {
        e.data.StartDate = new Date();
        e.data.Status = 0;

    }
</script>

